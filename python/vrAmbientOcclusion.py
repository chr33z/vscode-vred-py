
# Autogenerated method stubs for 'vrAmbientOcclusion.py' module
# VRED Version: 13.0
# 
# VRED-Py - Visual Studio Code Tools for Autodesk VRED
# Copyright: Christopher Gebhardt 2020



def computeAmbientOcclusion(quality, minDistance, maxDistance, indirectIllumination, colorBleeding, gatherQuality, numIndirections, subdivide, minEdgeLength, overrideMaterialColor, materialColorR, materialColorG, materialColorB, subdivisionQuality, intensityThreshold):
    '''
    Calculates ambient occlusion and indirect illumination including color bleeding. There are three valid sets of parameters:

computeAmbientOcclusion(quality, minDistance, maxDistance, indirectIllumination, colorBleeding, gatherQuality, numIndirections, subdivide, minEdgeLength)

computeAmbientOcclusion(quality, minDistance, maxDistance, indirectIllumination, colorBleeding, gatherQuality, numIndirections, subdivide, minEdgeLength, overrideMaterialColor, materialColorR, materialColorG, materialColorB)

computeAmbientOcclusion(quality, minDistance, maxDistance, indirectIllumination, colorBleeding, gatherQuality, numIndirections, subdivide, minEdgeLength, overrideMaterialColor, materialColorR, materialColorG, materialColorB, subdivisionQuality, intensityThreshold)

@param quality: The quality level (value from 0 to 5) for the ambient occlusion calculation.

@type quality: unsigned integer

@param minDistance: The minimum distance a ray searches for intersections.

@type minDistance: float

@param maxDistance: The maximum distance a ray searches for intersections.

@type maxDistance: float

@param indirectIllumination: Turns indirect illumination on or off.

@type indirectIllumination: bool

@param colorBleeding: Turns color bleeding on or off.

@type colorBleeding: bool

@param gatherQuality: The quality level (value from 0 to 4) for the indirect illumination gathering passes.

@type gatherQuality: unsigned integer

@param numIndirections: The number of bounces (gathering passes) for the indirect illumination.

@type numIndirections: unsigned integer

@param subdivide: Turns geometry subdivision on or off.

@type subdivide: bool

@param minEdgeLength: Sets the minimum length an edge may have after subdivision.

@type minEdgeLength: float

@param overrideMaterialColor: Turns material color override on or off (Optional).

@type overrideMaterialColor: bool

@param materialColorR: Red component of the material override color (Optional).

@type materialColorR: float

@param materialColorG: Green component of the material override color (Optional).

@type materialColorG: float

@param materialColorB: Blue component of the material override color (Optional).

@type materialColorB: float

@param subdivisionQuality: The quality level (value from 0 to 2) for the subdivision of the geometry (Optional).

@type subdivisionQuality: int

@param intensityThreshold: Sets the intensity threshold for a subdivision (Optional).

@type intensityThreshold: float
    '''
    pass



def computeMissingAmbientOcclusion(quality, minDistance, maxDistance, indirectIllumination, colorBleeding, gatherQuality, numIndirections, subdivide, minEdgeLength, intensityThreshold, overrideMaterialColor, materialColorR, materialColorG, materialColorB, subdivisionQuality):
    '''
    Calculates ambient occlusion and indirect illumination including color bleeding for the selected nodes that do not have a calculation yet. There are two valid sets of parameters:

computeMissingAmbientOcclusion(quality, minDistance, maxDistance, indirectIllumination, colorBleeding, gatherQuality, numIndirections, subdivide, minEdgeLength, intensityThreshold, overrideMaterialColor, materialColorR, materialColorG, materialColorB)

computeMissingAmbientOcclusion(quality, minDistance, maxDistance, indirectIllumination, colorBleeding, gatherQuality, numIndirections, subdivide, minEdgeLength, intensityThreshold, overrideMaterialColor, materialColorR, materialColorG, materialColorB, subdivisionQuality)

@param quality: The quality level (value from 0 to 5) for the ambient occlusion calculation.

@type quality: unsigned integer

@param minDistance: The minimum distance a ray searches for intersections.

@type minDistance: float

@param maxDistance: The maximum distance a ray searches for intersections.

@type maxDistance: float

@param indirectIllumination: Turns indirect illumination on or off.

@type indirectIllumination: bool

@param colorBleeding: Turns color bleeding on or off.

@type colorBleeding: bool

@param gatherQuality: The quality level (value from 0 to 4) for the indirect illumination gathering passes.

@type gatherQuality: unsigned integer

@param numIndirections: The number of bounces (gathering passes) for the indirect illumination.

@type numIndirections: unsigned integer

@param subdivide: Turns geometry subdivision on or off.

@type subdivide: bool

@param minEdgeLength: Sets the minimum length an edge may have after subdivision.

@type minEdgeLength: float

@param intensityThreshold: Sets the intensity threshold for a subdivision.

@type intensityThreshold: float

@param overrideMaterialColor: Turns material color override on or off.

@type overrideMaterialColor: bool

@param materialColorR: Red component of the material override color.

@type materialColorR: float

@param materialColorG: Green component of the material override color.

@type materialColorG: float

@param materialColorB: Blue component of the material override color

@type materialColorB: float

@param subdivisionQuality: The quality level (value from 0 to 2) for the subdivision of the geometry (Optional).

@type subdivisionQuality: int
    '''
    pass



def getAmbientOcclusionMode():
    '''
    Returns the current ambient occlusion mode. The modes are VR_AO_MODE_CLASSIC, VR_AO_MODE_SHADOWS and VR_AO_MODE_LIGHT_AND_SHADOWS

@return: The current mode.

@rtype: integer
    '''
    pass



def setAmbientOcclusionMode(mode):
    '''
    Sets the ambient occlusion mode. Accepted modes are VR_AO_MODE_CLASSIC, VR_AO_MODE_SHADOWS and VR_AO_MODE_LIGHT_AND_SHADOWS

@param mode: The new mode.

@type mode: integer
    '''
    pass



'''
Autogenerated Method-Stub for:
module vrFileIOService
------------------------------------------

API version: v2
Generation Date: 2020-04-24

VRED-Py: Visual Studio Code Tools for Autodesk VRED
'''

from typing import List



def abortImport(importId):
    '''
    Aborts an import job.
    '''
    pass



def checkCadType(file):
    '''
    Asynchronously starts querying the CAD file type of a file with the given file path. After succesfully querying the type or looking it up in a cache a fileTypeReceived signal is emited. This might be needed since some file extensions, i.E. .prt, can’t be clearly associated to a single file type.
    '''
    pass



def getBaseFileSuffix(file):
    '''
    Returns the file extension.
    '''
    pass



def getFileName():
    '''
    Gets the current file name.
    '''
    pass



def getFileTypeByFileName(file):
    '''
    Gets the file type by file name.
    '''
    pass



def getImageReadFilter():
    '''
    This returns a space separated list of the the supported image file types that can be loaded.
    '''
    pass



def getImageWriteFilter():
    '''
    This returns a space separated list of the the supported image file types that can be saved.
    '''
    pass



def getImportSettings(fileType):
    '''
    Gets the current import settings for a given CAD file type.
    '''
    pass



def getImportSettingsFromPreferences(fileType):
    '''
    Gets the import settings from preferences.
    '''
    pass



def getMaxNumImportProcesses():
    '''
    Returns the maximum number import processes.
    '''
    pass



def getMergeProjectAnnotations():
    '''
    Flag indicates if annotations contained in a project file should be merged after loading.
    '''
    pass



def getProjectMergeSettings():
    '''
    Gets the project merge settings.
    '''
    pass



def getReadFileTypesFilter(mode):
    '''
    Gets the filter for readable file types.
    '''
    pass



def getSceneImportSettings():
    '''
    Gets the scene current scene import settings.
    '''
    pass



def getStreamName():
    '''
    Gets the current stream name.
    '''
    pass



def getVREDDataDir():
    '''
    Gets the VRED data dir. This is the ‘data’ subfolder of the base directory.
    '''
    pass



def getVREDDir():
    '''
    Gets the base application directory.
    '''
    pass



def getVREDExamplesDir():
    '''
    Gets the VRED examples dir. This is the ‘examples’ subfolder of the base directory.
    '''
    pass



def getVREDFileTypesFilter():
    '''
    Gets the VRED file types filter.
    '''
    pass



def hasImportSettings(file):
    '''
    Determines if there are import settings for a given file.
    '''
    pass



def hasImportSettings(fileType):
    '''
    Determines if there are import settings for a given file type.
    '''
    pass



def hasSmartReferences(file):
    '''
    Queries for a OSB or VPB file if it contains smart references.
    '''
    pass



def importAtfFile(file, parent):
    '''
    Imports a file with the ATF loader.
    '''
    pass



def importFiles(files, parent, atfConversionOutputDir, loadConvertedAtfFiles, removeConvertedAtfFiles, loadBehavior):
    '''
    Imports a list of files.
    '''
    pass



def importMissingFiles(node, removeConvertedAtfFiles):
    '''
    Imports missing files from a scene node.
    '''
    pass



def inlineImageSequences():
    '''
    Inlines all image sequences.
    '''
    pass



def isAtfFile(file):
    '''
    Checks if the given file can be imported with ATF.
    '''
    pass



def isConvertedAtfTree(root):
    '''
    Checks if a scene node is a converted ATF tree.
    '''
    pass



def isSupportedFile(file):
    '''
    Checks if a given file can be imported.
    '''
    pass



def isVredProject(file):
    '''
    Checks if the given file is a VRED project.
    '''
    pass



def jobBelongsToImport(jobId, importId):
    '''
    Checks if an import identifier belongs to a given job.
    '''
    pass



def loadFile(file):
    '''
    Loads a file.
    '''
    pass



def newFile():
    '''
    Destroy the current scene and create a new scene with an empty file name.
    '''
    pass



def reimportNodes(nodes):
    '''
    Reimports a list of nodes with referenced source files.
    '''
    pass



def saveFile(file):
    '''
    Saves a file.
    '''
    pass



def setImportSettings(fileType, settings):
    '''
    Sets the import settings for a given file type.
    '''
    pass



def setMaxNumImportProcesses(value):
    '''
    Sets the maximum number of import processes.
    '''
    pass



def setProjectMergeSettings(settings):
    '''
    Sets the project merge settings.
    '''
    pass



def setSceneImportSettings(settings):
    '''
    Sets the scene import settings.
    '''
    pass



def undoInlineImageSequences():
    '''
    Removes all inlined image sequences.
    '''
    pass



def validateAtfTree():
    '''
    Documentation missing
    '''
    pass



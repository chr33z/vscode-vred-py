
# Autogenerated method stubs for 'vrCamera.py' module
# VRED Version: 13.0
# 
# VRED-Py - Visual Studio Code Tools for Autodesk VRED
# Copyright: Christopher Gebhardt 2020



def addCollisionNode(name):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getCameraCollider().addNode(name)} instead.

Add node to collide against for the active camera.

@param name: The name of the node. 

@type name: string
    '''
    pass



def addViewPoint(name, unique):
    '''
    Deprecated. Use C{vrCameraService.createViewpoint(name)} instead.

Adds the current view as a viewpoint with the name provided.

@param name: The name of the viewpoint to add.

@type name: string

@param unique: If true, a unique name is generated. (Optional).

@type unique: bool
    '''
    pass



def adjustAtPos4Viewpoint(name, rootname):
    '''
    Adjust the look at point onto the surface of the closest object in the direction of viewing.

@param name: The name of the viewpoint.

@type name: string

@param rootname: The name of the root node that may contain the object (Optional).

@type rootname: string
    '''
    pass



def buildCollisionData():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getCameraCollider().buildCollisionStructure()} instead.

Build data structure for collision detection for the active camera.
    '''
    pass



def enableCollision(activate):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getCameraCollider().setEnabled(activate)} instead.

Enables/disables the collision detection for the active camera.

@param activate: If true, the collision is enabled.

@type activate: bool
    '''
    pass



def enableCollisionSlide(activate):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getCameraCollider().setSlide(activate)} instead.

Enables/disables the sliding for collision detection for the active camera.

@param activate: If true, the sliding for the collision is enabled.

@type activate: bool
    '''
    pass



def getActiveCameraNode():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera()} instead.

Returns the active camera vrNodePtr of the active render window.

@return: Camera node.

@rtype: vrNodePtr
    '''
    pass



def getCameraHmdMode():
    '''
    Returns camera Vive mode state. 

@return: 0 = off, 1 = on

@rtype: bool
    '''
    pass



def getCameraTracks(name):
    '''
    Deprecated. Use C{vrCameraService.getAllCameraTracks()} and C{track.getChildren()} instead.

Gets all camera track names and the names of the contained viewpoints for the given camera.

@param name: Camera name.

@type name: string

@return: Camera tracks for passed camera name.

@rtype: dict
    '''
    pass



def getDepthOfField():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDepthOfField()} instead.

Returns the current depth of field state of the current camera.

@return: current state of depth of field flag.

@rtype: bool
    '''
    pass



def getDollyZoom():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDollyZoom()} instead.

Returns the current dolly zoom state of the current camera.

@return: current state of dolly zoom flag.

@rtype: bool
    '''
    pass



def getFogBlendHeight():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getHeightFogBlend()} instead.

Returns the blend value of height-fog.

@return: Returns the blend value of height-fog.

@rtype: float
    '''
    pass



def getFogColorDistance():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDistanceFogColor()} instead.

Get the color of distance-fog.

@return: A vector with r, g, b components.

@rtype: Vec3f
    '''
    pass



def getFogColorHeight():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getHeightFogColor()} instead.

Get the color of height-fog.

@return: A vector with r, g, b components.

@rtype: Vec3f
    '''
    pass



def getFogDensityDistance():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDistanceFogDensity()} instead.

Returns the density of distance-fog.

@return: Returns the density of distance-fog.

@rtype: float
    '''
    pass



def getFogDensityHeight():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getHeightFogDensity()} instead.

Returns the density of height-fog.

@return: Returns the density of height-fog.

@rtype: float
    '''
    pass



def getFogDistance():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDistanceFog()} instead.

Returns the current activation value of distance-fog.

@return: Returns the current activation value of distance-fog.

@rtype: bool
    '''
    pass



def getFogEnableNoiseSizeUniformDistance():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDistanceFogEnableNoiseSizeUniform()} instead.

Returns the uniform noise size flag for distance-fog. 

@rtype: bool
    '''
    pass



def getFogEnableNoiseSizeUniformHeight():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getHeightFogEnableNoiseSizeUniform()} instead.

Returns the uniform noise size flag for height-fog. 

@rtype: bool
    '''
    pass



def getFogFalloffDistance():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDistanceFogFalloff()} instead.

Returns the falloff type of distance-fog.

@return: Returns the current falloff type of distance-fog.

@rtype: unsigned int
    '''
    pass



def getFogFalloffHeight():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getHeightFogFalloff()} instead.

Returns the falloff type of height-fog.

@return: Returns the current falloff type of height-fog.

@rtype: unsigned int
    '''
    pass



def getFogHeight():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getHeightFog()} instead.

Returns the current activation value of height-fog.

@return: Returns the current activation value of height-fog.

@rtype: bool
    '''
    pass



def getFogNoiseDistance():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDistanceFogNoise()} instead.

Returns the noise intensity of distance-fog.

@return: Returns the noise intensity of distance-fog.

@rtype: float
    '''
    pass



def getFogNoiseHeight():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getHeightFogNoise()} instead.

Returns the noise intensity of height-fog.

@return: Returns the noise intensity of height-fog.

@rtype: float
    '''
    pass



def getFogNoiseOffsetDistance():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDistanceFogNoiseOffset()} instead.

Returns the noise offset of distance-fog.

@return: Returns the noise offset of distance-fog.

@rtype: Vec3f
    '''
    pass



def getFogNoiseOffsetHeight():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getHeightFogNoiseOffset()} instead.

Returns the noise offset of distance-fog.

@return: Returns the noise offset of distance-fog.

@rtype: Vec3f
    '''
    pass



def getFogNoiseSizeDistance():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDistanceFogNoiseSize()} instead.

Returns the noise size of distance-fog.

@return: Returns the noise size of distance-fog.

@rtype: Vec3f
    '''
    pass



def getFogNoiseSizeHeight():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getHeightFogNoiseSize()} instead.

Returns the noise size of height-fog.

@return: Returns the noise size of height-fog.

@rtype: Vec3f
    '''
    pass



def getFogRangeDistance():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getDistanceFogRange()} instead.

Get the near value of distance-fog.

@return: Distance from camera where the fog begins.

@rtype: float
    '''
    pass



def getFogRangeHeight():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getHeightFogRange()} instead.

Get the range of height-fog.

@return: A vector with min, max values.

@rtype: Vec2f
    '''
    pass



def getGlare():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getGlare()} instead.

Returns the current glare state of the current camera.

@return: current state of glare flag.

@rtype: bool
    '''
    pass



def getGlow():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getGlow()} instead.

Returns the current glow state of the current camera.

@return: current state of glow flag.

@rtype: bool
    '''
    pass



def getLensFlare():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getLensFlare()} instead.

Returns the current lens flare state of the current camera.

@return: current state of lens flare flag.

@rtype: bool
    '''
    pass



def getMotionBlur():
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getMotionBlur()} instead.

Returns the current motion blur state of the current camera.

@return: current state of motion blur flag.

@rtype: bool
    '''
    pass



def getViewpointCreationMode():
    '''
    Deprecated. Use C{vrCameraService.getViewpointCreationMode()} instead.

Returns viewpoint creation mode. See setViewpointCreationMode.

@return: 0 (IgnoreTrackingMatrix), 1 (IncludeTrackingMatrix).

@rtype: unsigned int
    '''
    pass



def getViewpointNode(name):
    '''
    Deprecated. Use C{vrCameraService.getViewpoint(name)} instead.

Returns the viewpoint vrNodePtr with passed name.

@param name: The name of the viewpoint. 

@type name: string

@return: Viewpoint node.

@rtype: vrNodePtr
    '''
    pass



def getViewpointPreview(name):
    '''
    Deprecated. Use C{vrCameraService.getAllViewpoints()} and C{vrdViewpointNode.getPreview()} instead.

Get a preview image for the viewpoint (if it has one).

Convert returned data to Base64: C{base64.b64encode(getViewpointPreview("View"))}

@param name: The name of the viewpoint.

@type name: string

@return: bytes of a png image.

@rtype: string
    '''
    pass



def getViewpoints():
    '''
    Deprecated. Use C{vrCameraService.getAllViewpoints()} and vrdViewpointNode.getName() instead.

Returns a list of all viewpoints.

@return: Viewpoint names.

@rtype: list of strings
    '''
    pass



def jumpViewPoint(name):
    '''
    Deprecated. Use C{vrCameraService.getViewpoint(name).activate(True)} instead.

Jumps to the Viewpoint via name. The difference to selectViewPoint is that this function immediately jumps to the viewpoint (no interpolation).

@param name: The name of the viewpoint.

@type name: string
    '''
    pass



def loadViewPoints(filename):
    '''
    Deprecated. Use C{vrCameraService.load(filename)} instead.

Loads a viewpoint xml-file from disk.

@param filename: The name of the XML-file.

@type filename: string
    '''
    pass



def playTrack(name):
    '''
    Deprecated. Use C{vrCameraService.getAllCameraTracks()}, find the track with the name, and C{track.setPlaying(True)} instead.

Plays a track via name.

@param name: The name of the track.

@type name: string
    '''
    pass



def removeViewPoint(name):
    '''
    Deprecated. Use C{vrNodeService.removeNodes([vrCameraService.getViewpoint(name)])} instead.

Removes the viewpoint with the given name.

@param name: The name of the viewpoint to remove.

@type name: string
    '''
    pass



def saveViewPoints(filename):
    '''
    Deprecated. Use C{vrCameraService.saveViewpoints(filename)} instead.

Saves a viewpoint xml-file to disk.

@param filename: The name of the XML-file.

@type filename: string
    '''
    pass



def selectCamera(name):
    '''
    Deprecated. Use C{vrCameraService.getCamera(name).activate()} instead.

Activates a camera via name.

@param name: The name of the camera.

@type name: string
    '''
    pass



def selectViewPoint(name):
    '''
    Deprecated. Use C{vrCameraService.getViewpoint(name).activate()} instead.

Activates a viewpoint via name.

@param name: The name of the viewpoint.

@type name: string
    '''
    pass



def setCameraHmdMode(activate):
    '''
    Enables/disables camera Vive mode. 

@param activate: 0 = off, 1 = on

@type activate: bool
    '''
    pass



def setCollisionBuildMethod(method):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getCameraCollider().setCollisionStructureBuildMethod(method)} instead.

Set collision building method for the active camera.

@param method: 0 = use triangles, 1 = use bounding boxes.

@type method: int
    '''
    pass



def setCollisionDistance(dist):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getCameraCollider().setDistance(dist)} instead.

Sets the closest allowed distance from the active camera to a colliding object. 

@param dist: The distance.

@type dist: float
    '''
    pass



def setDepthOfField(on):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDepthOfField(on)} instead.

Enables/disables depth of field for the current camera. 

@param on: true/false

@type on: bool
    '''
    pass



def setDollyZoom(on):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDollyZoom(on)} instead.

Enables/disables dolly zoom for the current camera. 

@param on: true/false

@type on: bool
    '''
    pass



def setExposure(exposure, name):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getTonemapper().setExposure(exposure)} or C{vrCameraService.getCamera(name).getTonemapper().setExposure(exposure)} instead.

Sets the exposure of the active camera. Alternatively, the name of a specific camera can be provided.

@param exposure: The exposure.

@type exposure: float

@param name: The name of the camera (Optional).

@type name: string
    '''
    pass



def setFStop(fStop, name):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setFStop(fStop)} or C{vrCameraService.getCamera(name).setFStop(fStop)} instead.

Sets the FStop of the active camera. Alternatively, the name of a specific camera can be provided.

Please note that the FStop value only takes effect if Depth of Field is activated for the camera.

@param fStop: The FStop in f/N where N is the value passed to this function.

@type fStop: float

@param name: The name of the camera (Optional).

@type name: string
    '''
    pass



def setFogBlendHeight(blend):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setHeightFogBlend(blend)} instead.

Set the transition distance between fog and no fog. 

@param blend: smooths the transition between areas with fog and areas without fog (value from 0 to 1).

@type blend: float
    '''
    pass



def setFogColorDistance(r):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDistanceFogColor(color)} instead.

Sets the color of the distance-fog.

@param r: Red component of the fog color, range [0; 1].

@type r: float@param g: Green component of the fog color, range [0; 1].

@type g: float@param b: Blue component of the fog color, range [0; 1].

@type b: float
    '''
    pass



def setFogColorHeight(r):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setHeightFogColor(color)} instead.

Sets the color of the height-fog.

@param r: Red component of the fog color, range [0; 1].

@type r: float@param g: Green component of the fog color, range [0; 1].

@type g: float@param b: Blue component of the fog color, range [0; 1]n
@type b: float
    '''
    pass



def setFogDensityDistance(density):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDistanceFogDensity(density)} instead.

Set the density of distance-fog. 

@param density: The fog density (value >= 0).

@type density: float
    '''
    pass



def setFogDensityHeight(density):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setHeightFogDensity(density)} instead.

Set the density of height-fog. 

@param density: The fog density (value >= 0).

@type density: float
    '''
    pass



def setFogDistance(activate):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDistanceFog(activate)} instead.

Enables/disables distance-fog. 

@param activate: 0 = off, 1 = on

@type activate: bool
    '''
    pass



def setFogEnableNoiseSizeUniformDistance(uniform):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDistanceFogEnableNoiseSizeUniform(uniform)} instead.

Enables/disables uniform noise size for distance-fog. 

@param uniform: if true, uniform noise is activated

@type uniform: bool
    '''
    pass



def setFogEnableNoiseSizeUniformHeight(uniform):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setHeightFogEnableNoiseSizeUniform(uniform)} instead.

Enables/disables uniform noise size for height-fog. 

@param uniform: if true, uniform noise is activated

@type uniform: bool
    '''
    pass



def setFogFalloffDistance(falloff):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDistanceFogFalloff(falloff)} instead.

Set the falloff. 

@param falloff: 0 = realistic, 1 = linear

@type falloff: unsigned int
    '''
    pass



def setFogFalloffHeight(falloff):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setHeightFogFalloff(falloff)} instead.

Set the falloff of height-fog. 

@param falloff: 0 = realistic, 1 = linear

@type falloff: unsigned int
    '''
    pass



def setFogHeight(activate):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setHeightFog(activate)} instead.

Enables/disables height-fog. 

@param activate: 0 = off, 1 = on

@type activate: bool
    '''
    pass



def setFogNoiseDistance(intensity):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDistanceFogNoise(intensity)} instead.

Set the intensity of noise for distance-fog. 

@param intensity: Multiplier of noise (value from 0 to 10).

@type intensity: float
    '''
    pass



def setFogNoiseHeight(intensity):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setHeightFogNoise(intensity)} instead.

Set the intensity of noise for height-fog. 

@param intensity: Multiplier of noise (value from 0 to 10).

@type intensity: float
    '''
    pass



def setFogNoiseOffsetDistance(sizeX):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDistanceFogNoiseOffset(offset)} instead.

Set the offset of noise for distance-fog. 

@param sizeX: Noise offset along X.

@type sizeX: float@param sizeY: Noise offset along Y.

@type sizeY: float@param sizeZ: Noise offset along Z.

@type sizeZ: float
    '''
    pass



def setFogNoiseOffsetHeight(sizeX):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setHeightFogNoiseOffset(offset)} instead.

Set the offset of noise for distance-fog. 

@param sizeX: Noise offset along X.

@type sizeX: float@param sizeY: Noise offset along Y.

@type sizeY: float@param sizeZ: Noise offset along Z .

@type sizeZ: float
    '''
    pass



def setFogNoiseSizeDistance(sizeX):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDistanceFogNoiseSize(size)} instead.

Set the size of noise for distance-fog. 

@param sizeX: Noise size along X (value >= 0.01).

@type sizeX: float@param sizeY: Noise size along Y (value >= 0.01).

@type sizeY: float@param sizeZ: Noise size along Z (value >= 0.01).

@type sizeZ: float
    '''
    pass



def setFogNoiseSizeHeight(sizeX):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setHeightFogNoiseSize(size)} instead.

Set the size of noise for height-fog. 

@param sizeX: Noise size along X (value >= 0.01).

@type sizeX: float@param sizeY: Noise size along Y (value >= 0.01).

@type sizeY: float@param sizeZ: Noise size along Z (value >= 0.01).

@type sizeZ: float
    '''
    pass



def setFogRangeDistance(near):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setDistanceFogRange(near)} instead.

Sets where distance-fog begins.

@param near: Distance from camera where the fog begins.

@type near: float
    '''
    pass



def setFogRangeHeight(min):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setHeightFogRange(QVector2D(min, max)} instead.

Sets where height-fog begins and where it ends.

@param min: Height from ground where the fog begins.

@type min: float@param max: Height from ground where the fog ends. Must be greater than min.

@type max: float
    '''
    pass



def setGlare(on):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setGlare(on)} instead.

Enables/disables glare for the current camera. 

@param on: true/false

@type on: bool
    '''
    pass



def setGlow(on):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setGlow(on)} instead.

Enables/disables glow for the current camera. 

@param on: true/false

@type on: bool
    '''
    pass



def setLeftEyeBlendingMap(file, activate):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().loadBlendMap(file, vrCameraTypes.CameraEye.CameraLeftEye)} instead.

Sets and enables/disables the blending map for the left eye of the active camera.

@param file: BlendingMap file.

@type file: string

@param activate: Enables/Disables left eye blending.

@type activate: bool
    '''
    pass



def setLensFlare(on):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setLensFlare(on)} instead.

Enables/disables lens flares for the current camera. 

@param on: true/false

@type on: bool
    '''
    pass



def setMotionBlur(on):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().setMotionBlur(on)} instead.

Enables/disables motion blur for the current camera. 

@param on: true/false

@type on: bool
    '''
    pass



def setNavigatorMode(mode):
    '''
    Sets the current navigator mode (0: fly, 1: trackball, 2: axis, 3: none, 4: orientation).

@param mode: Navigator mode.

@type mode: unsigned int
    '''
    pass



def setRightEyeBlendingMap(file, activate):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().loadBlendMap(file, vrCameraTypes.CameraEye.CameraRightEye)} instead.

Sets and enables/disables the blending map for the right eye of the active camera.

@param file: BlendingMap file.

@type file: string

@param activate: Enables/Disables right eye blending.

@type activate: bool
    '''
    pass



def setViewPoint(name):
    '''
    Deprecated. Use C{vrCameraService.getViewpoint(name).setToCurrentView()} instead.

Recaptures a viewpoint via name.

@param name: The name of the viewpoint.

@type name: string
    '''
    pass



def setViewpointCreationMode(mode):
    '''
    Deprecated. Use C{vrCameraService.setViewpointCreationMode(mode)} instead.

Sets how a new viewpoint is created when using head-tracking (e.g. with a HMD in VR). Available modes are: 0 (IgnoreTrackingMatrix), 1 (IncludeTrackingMatrix).

With IncludeTrackingMatrix (default) the head-tracked view is stored in the viewpoint.

With IgnoreTrackingMatrix, the current camera transformation without tracking is stored in the viewpoint.

Affects viewpoints created in the GUI and with Python API, including viewpoints created by capturing a variant set.

@param mode: 0 (IgnoreTrackingMatrix), 1 (IncludeTrackingMatrix).

@type mode: unsigned int
    '''
    pass



def setWhitepoint(whitepoint, name):
    '''
    Deprecated. Use C{vrCameraService.getActiveCamera().getTonemapper().setWhitePoint(whitepoint)} or C{vrCameraService.getCamera(name).getTonemapper().setWhitePoint(whitepoint)} instead.

Sets the whitepoint of the active camera. Alternatively, the name of a specific camera can be provided.

@param whitepoint: The whitepoint.

@type whitepoint: float

@param name: The name of the camera (Optional).

@type name: string
    '''
    pass



def viewpointAnim(name):
    '''
    Deprecated. Use C{vrCameraService.getViewpoint(name).activate(False, True)} instead.

Animates to a viewpoint via name. The function waits until animation is finished.

@param name: The name of the viewpoint.

@type name: string
    '''
    pass



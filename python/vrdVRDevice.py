'''
Autogenerated Method-Stub for:
module vrdVRDevice
------------------------------------------

API version: v2
Generation Date: 2020-04-24

VRED-Py: Visual Studio Code Tools for Autodesk VRED
'''

from typing import List



def addVirtualButton(button, physicalButton):
    '''
    Adds a virtual button to the controller that maps a position of a button to a new signal.
    '''
    pass



def disableRay():
    '''
    Disables the currently activated pointing ray.
    '''
    pass



def enableRay(axis):
    '''
    Enables a pointing ray out of the controller.
    '''
    pass



def getButtonState(button):
    '''
    Gets the state of the current button.
    '''
    pass



def getName():
    '''
    Gets the name of the device
    '''
    pass



def getNode():
    '''
    Gets a node under the origin of the VR device. This node is not part of the scenegraph. If some geometry should be attached to the device, a constraint (see         vrConstraintService.createParentConstraint(targetNodes, constrainedNode, maintainOffset)) should be used. Example: vr/attachToController.py.
    '''
    pass



def getSerialNumber():
    '''
    Gets the serial number of the device.
    '''
    pass



def getTrackingMatrix():
    '''
    Documentation missing
    '''
    pass



def getVisualizationMode():
    '''
    Gets the current visualization mode.
    '''
    pass



def getVisualizationNode():
    '''
    Gets the root node of the controller visualization. If the controller is currently not visible or not detected by the tracking system, this function will return an empty node.
    '''
    pass



def isVisible():
    '''
    Gets the visibility of the device.
    '''
    pass



def pick():
    '''
    Tries to pick the object in the scene at the intersection point of the pointing ray with the scene.
    '''
    pass



def removeVirtualButton(button, physicalButton):
    '''
    Removes a virtual button that is related to a physical button.
    '''
    pass



def removeVirtualButton(virtualButton, physicalButton):
    '''
    Removes a virtual button that is related to a physical button.
    '''
    pass



def setButtonPressed(state, button):
    '''
    Simulate a button press.
    '''
    pass



def setButtonTouched(state, button):
    '''
    Simulate a button press.
    '''
    pass



def setTrackingMatrix(matrix):
    '''
    Simulate a tracking position change.
    '''
    pass



def setVisible(visible):
    '''
    Sets the VR device visible or invisible.
    '''
    pass



def setVisualizationMode(mode):
    '''
    Sets the visualization mode.
    '''
    pass



def signal():
    '''
    Documentation missing
    '''
    pass



def vibrate(milliseconds, axisId):
    '''
    Triggers the vibration functionality of the device if available.
    '''
    pass



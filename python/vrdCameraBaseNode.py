'''
Autogenerated Method-Stub for:
module vrdCameraBaseNode
------------------------------------------

API version: v2
Generation Date: 2020-04-24

VRED-Py: Visual Studio Code Tools for Autodesk VRED
'''

from typing import List



def adjustAtPosition(root):
    '''
    Adjust the look at point onto the surface of the closest object in the direction of viewing.
    '''
    pass



def getApplyColorCorrectionToBackground():
    '''
    Returns if color correction should be applied to background.
    '''
    pass



def getApplyColorCorrectionToForeground():
    '''
    Returns if color correction should be applied to foreground.
    '''
    pass



def getBlendAmount():
    '''
    Returns the amount of blending used.
    '''
    pass



def getBlendMapLeftEye():
    '''
    Returns the blending map for the left eye of the camera.
    '''
    pass



def getBlendMapRightEye():
    '''
    Returns the blending map for the right eye of the camera.
    '''
    pass



def getBlendMode():
    '''
    Returns the current blending mode.
    '''
    pass



def getColorCorrectionBrightness():
    '''
    Returns the color correction brightness.
    '''
    pass



def getColorCorrectionContrast():
    '''
    Returns the color correction contrast.
    '''
    pass



def getColorCorrectionHueOffset():
    '''
    Returns the color correction hue offset.
    '''
    pass



def getColorCorrectionSaturation():
    '''
    Returns the color correction saturation.
    '''
    pass



def getCustomFrustumEnabled():
    '''
    Returns the state of the custom frustum.
    '''
    pass



def getCustomProjectionMatrix():
    '''
    Returns the custom 4x4 projection matrix.
    '''
    pass



def getDepthOfField():
    '''
    Returns the current depth of field state of the camera.
    '''
    pass



def getDistanceFog():
    '''
    Returns the current activation state of distance-fog.
    '''
    pass



def getDistanceFogColor():
    '''
    Get the color of distance-fog.
    '''
    pass



def getDistanceFogDensity():
    '''
    Returns the density of distance-fog.
    '''
    pass



def getDistanceFogEnableNoiseSizeUniform():
    '''
    Returns the uniform noise size flag for distance-fog.
    '''
    pass



def getDistanceFogFalloff():
    '''
    Returns the falloff type of distance-fog.
    '''
    pass



def getDistanceFogNoise():
    '''
    Returns the noise intensity of distance-fog.
    '''
    pass



def getDistanceFogNoiseOffset():
    '''
    Returns the noise offset of distance-fog.
    '''
    pass



def getDistanceFogNoiseSize():
    '''
    Returns the noise size of distance-fog.
    '''
    pass



def getDistanceFogRange():
    '''
    Get the near value of distance-fog.
    '''
    pass



def getDistortion():
    '''
    Returns if distortion is enabled.
    '''
    pass



def getDistortionMapLeftEye():
    '''
    Returns the distortion map for the left eye of the camera.
    '''
    pass



def getDistortionMapRightEye():
    '''
    Returns the distortion map for the left right of the camera.
    '''
    pass



def getFarClippingDistance():
    '''
    Returns the distance of the far clipping plane.
    '''
    pass



def getFocalLength():
    '''
    Returns the focal length.
    '''
    pass



def getFocusDistance():
    '''
    Returns the focus distance.
    '''
    pass



def getFov():
    '''
    Gets the field of view.
    '''
    pass



def getFovMode():
    '''
    Returns the field of view mode.
    '''
    pass



def getFromAtUp():
    '''
    Gets the from at and up vectors in local space.
    '''
    pass



def getFromAtUpWorld():
    '''
    Returns from, at and up vectors in world space.
    '''
    pass



def getFrustum():
    '''
    Returns the custom frustum.
    '''
    pass



def getFrustumBottom():
    '''
    Returns the size bottom side of the frustum.
    '''
    pass



def getFrustumLeft():
    '''
    Returns the size left side of the frustum.
    '''
    pass



def getFrustumRight():
    '''
    Returns the size right side of the frustum.
    '''
    pass



def getFrustumTop():
    '''
    Returns the size top side of the frustum.
    '''
    pass



def getFStop():
    '''
    Returns the FStop of the camera,.
    '''
    pass



def getGlare():
    '''
    Returns the current glare state of the camera.
    '''
    pass



def getGlareIntensity():
    '''
    Returns the glare intensity.
    '''
    pass



def getGlareRotation():
    '''
    Returns the glare rotation.
    '''
    pass



def getGlareSize():
    '''
    Returns the glare size.
    '''
    pass



def getGlareStreaks():
    '''
    Returns the number of glare streaks.
    '''
    pass



def getGlareThreshold():
    '''
    Returns the glare threshold.
    '''
    pass



def getGlow():
    '''
    Returns the current glow state of the camera.
    '''
    pass



def getGlowFalloff():
    '''
    Returns the glow falloff.
    '''
    pass



def getGlowIntensity():
    '''
    Returns the glow intensity.
    '''
    pass



def getGlowSize():
    '''
    Returns the glow size.
    '''
    pass



def getGlowThreshold():
    '''
    Returns the glow threshold.
    '''
    pass



def getHeightFog():
    '''
    Returns the current activation value of height-fog.
    '''
    pass



def getHeightFogBlend():
    '''
    Returns the blend value of height-fog.
    '''
    pass



def getHeightFogColor():
    '''
    Get the color of height-fog.
    '''
    pass



def getHeightFogDensity():
    '''
    Returns the density of height-fog.
    '''
    pass



def getHeightFogEnableNoiseSizeUniform():
    '''
    Returns the uniform noise size flag for height-fog.
    '''
    pass



def getHeightFogFalloff():
    '''
    Returns the falloff type of height-fog.
    '''
    pass



def getHeightFogNoise():
    '''
    Returns the noise intensity of height-fog.
    '''
    pass



def getHeightFogNoiseOffset():
    '''
    Returns the noise offset of height-fog.
    '''
    pass



def getHeightFogNoiseSize():
    '''
    Returns the noise size of height-fog.
    '''
    pass



def getHeightFogRange():
    '''
    Returns the range of height-fog.
    '''
    pass



def getLensFlare():
    '''
    Queries if lens flares are visible for this camera.
    '''
    pass



def getMotionBlur():
    '''
    Returns the current motion blur state of the camera.
    '''
    pass



def getNearClippingDistance():
    '''
    Returns the distance of the near clipping plane.
    '''
    pass



def getOrthographicSize():
    '''
    Returns the orthographic size.
    '''
    pass



def getPerspectiveMatch():
    '''
    Gets the camera perspective match object.
    '''
    pass



def getPrincipalPointOffset():
    '''
    Returns the principal point offset.
    '''
    pass



def getProjectionMode():
    '''
    Returns the projection mode used for the camera.
    '''
    pass



def getRoll():
    '''
    Returns the camera roll.
    '''
    pass



def getSensorSize():
    '''
    Returns the sensor size.
    '''
    pass



def getShutterSpeed():
    '''
    Returns the shutter speed.
    '''
    pass



def getSkew():
    '''
    Returns the skew factor of the camera.
    '''
    pass



def getStereoEyeSeparation():
    '''
    Returns the stereo eye separation used during omnidirectional stereo rendering.
    '''
    pass



def getStereoLayout():
    '''
    Returns the stereo layout.
    '''
    pass



def getStereoPolarMergeAngle():
    '''
    Returns the polar merge angle used during omnidirectional stereo rendering.
    '''
    pass



def getTonemapper():
    '''
    Returns the tone mapper.
    '''
    pass



def getViewpointTransition():
    '''
    Returns if viewpoint transitions are enabled.
    '''
    pass



def getViewpointTransitionDuration():
    '''
    Returns the duration of viewpoint transitions.
    '''
    pass



def getVignetteFeather():
    '''
    Returns the vignette feather.
    '''
    pass



def getVignetteRadius():
    '''
    Returns the vignette radius.
    '''
    pass



def getVignetteRoundness():
    '''
    Returns the vignette roundness.
    '''
    pass



def getWireframeRendering():
    '''
    Returns the state of wireframe rendering.
    '''
    pass



def isEditable():
    '''
    Returns if the node is in a locked state or can be edited.
    '''
    pass



def isEqual(camera):
    '''
    Determines if two camera nodes are internally using the same camera.
    '''
    pass



def isOrthographic():
    '''
    Returns if the camera is using orthographic projection.
    '''
    pass



def loadBlendMap(fileName, eye):
    '''
    Loads an image from a file and sets it as blending map for either the left or the right eye.
    '''
    pass



def loadDistortionMap(fileName, eye):
    '''
    Loads an image from a file and sets it as distortion map for either the left or the right eye.
    '''
    pass



def mirrorView(axis):
    '''
    Mirrors the camera view along one of the major axis.
    '''
    pass



def resetView():
    '''
    Zeros all values in the camera viewing matrix.
    '''
    pass



def setApplyColorCorrectionToBackground(enabled):
    '''
    Enable / disable the color correction for the background.
    '''
    pass



def setApplyColorCorrectionToForeground(enabled):
    '''
    Enable / disable the color correction for the foreground.
    '''
    pass



def setBlendAmount(value):
    '''
    Sets the amount of blending to use.
    '''
    pass



def setBlendMapLeftEye(image):
    '''
    Sets the blending map for the left eye of the camera.
    '''
    pass



def setBlendMapRightEye(image):
    '''
    Sets the blending map for the right eye of the camera.
    '''
    pass



def setBlendMode(mode):
    '''
    Sets and enables / disables the blending mode.
    '''
    pass



def setColorCorrectionBrightness(value):
    '''
    Sets the color correction brightness.
    '''
    pass



def setColorCorrectionContrast(value):
    '''
    Sets the color correction contrast.
    '''
    pass



def setColorCorrectionHueOffset(value):
    '''
    Sets the color correction hue offset.
    '''
    pass



def setColorCorrectionSaturation(value):
    '''
    Sets the color correction saturation.
    '''
    pass



def setCustomFrustumEnabled(enabled):
    '''
    Enable / disable the use of a custom frustum.
    '''
    pass



def setCustomProjectionMatrix(matrix):
    '''
    Sets a custom 4x4 projection matrix.
    '''
    pass



def setDepthOfField(enabled):
    '''
    Enables / disables depth of field for the camera.
    '''
    pass



def setDistanceFog(enable):
    '''
    Enables / disables distance-fog.
    '''
    pass



def setDistanceFogColor(color):
    '''
    Sets the color of the distance-fog.
    '''
    pass



def setDistanceFogDensity(density):
    '''
    Set the density of distance-fog.
    '''
    pass



def setDistanceFogEnableNoiseSizeUniform(enable):
    '''
    Enables / disables uniform noise size for distance-fog.
    '''
    pass



def setDistanceFogFalloff(value):
    '''
    Sets the falloff type of distance-fog.
    '''
    pass



def setDistanceFogNoise(intensity):
    '''
    Set the intensity of noise for distance-fog.
    '''
    pass



def setDistanceFogNoiseOffset(offset):
    '''
    Set the offset of noise for distance-fog.
    '''
    pass



def setDistanceFogNoiseSize(size):
    '''
    Set the size of noise for distance-fog.
    '''
    pass



def setDistanceFogRange(nearDistance):
    '''
    Sets where distance-fog begins.
    '''
    pass



def setDistortion(enabled):
    '''
    Enable / disable distortion.
    '''
    pass



def setDistortionMapLeftEye(image):
    '''
    Sets the distortion map for the left eye of the camera.
    '''
    pass



def setDistortionMapRightEye():
    '''
    Documentation missing
    '''
    pass



def setFarClippingDistance(value):
    '''
    Sets the distance of the far clipping plane.
    '''
    pass



def setFocalLength(value):
    '''
    Sets the focal length.
    '''
    pass



def setFocusDistance(distance):
    '''
    Sets the focus distance.
    '''
    pass



def setFov(value):
    '''
    Sets the field of view.
    '''
    pass



def setFovMode(mode):
    '''
    Sets the field of view mode.
    '''
    pass



def setFromAtUp(fromAtUp):
    '''
    Sets the from, at and up vectors in local space.
    '''
    pass



def setFromAtUpWorld(fromAtUp):
    '''
    Sets the from, at and up vectors in world space.
    '''
    pass



def setFrustum(frustum):
    '''
    Sets the custom frustum.
    '''
    pass



def setFrustumBottom(value):
    '''
    Sets the size of the bottom side of the frustum.
    '''
    pass



def setFrustumLeft(value):
    '''
    Sets the size of the left side of the frustum.
    '''
    pass



def setFrustumRight(value):
    '''
    Sets the size of the right side of the frustum.
    '''
    pass



def setFrustumTop(value):
    '''
    Sets the size of the top side of the frustum.
    '''
    pass



def setFStop(value):
    '''
    Sets the FStop of the camera.
    '''
    pass



def setGlare(enabled):
    '''
    Enables / disables glare for the camera.
    '''
    pass



def setGlareIntensity(value):
    '''
    Sets the glare intensity.
    '''
    pass



def setGlareRotation(value):
    '''
    Sets the glare rotation.
    '''
    pass



def setGlareSize(value):
    '''
    Sets the glare size.
    '''
    pass



def setGlareStreaks(value):
    '''
    Sets the number of glare streaks.
    '''
    pass



def setGlareThreshold(value):
    '''
    Sets the glare threshold.
    '''
    pass



def setGlow(enabled):
    '''
    Enables / disables glow for the camera.
    '''
    pass



def setGlowFalloff(value):
    '''
    Sets the glow falloff.
    '''
    pass



def setGlowIntensity(value):
    '''
    Sets the glow intensity.
    '''
    pass



def setGlowSize(value):
    '''
    Sets the glow size.
    '''
    pass



def setGlowThreshold(value):
    '''
    Sets the glow threshold.
    '''
    pass



def setHeightFog(enable):
    '''
    Enables / disables height-fog.
    '''
    pass



def setHeightFogBlend(blend):
    '''
    Set the transition distance between fog and no fog.
    '''
    pass



def setHeightFogColor(color):
    '''
    Sets the color of the height-fog.
    '''
    pass



def setHeightFogDensity(density):
    '''
    Set the density of height-fog.
    '''
    pass



def setHeightFogEnableNoiseSizeUniform(enable):
    '''
    Enables / disables uniform noise size for height-fog.
    '''
    pass



def setHeightFogFalloff(value):
    '''
    Set the falloff of height-fog.
    '''
    pass



def setHeightFogNoise(intensity):
    '''
    Set the intensity of noise for height-fog.
    '''
    pass



def setHeightFogNoiseOffset(offset):
    '''
    Set the offset of noise for height-fog.
    '''
    pass



def setHeightFogNoiseSize(size):
    '''
    Set the size of noise for height-fog.
    '''
    pass



def setHeightFogRange(range):
    '''
    Sets where height-fog begins and where it ends.
    '''
    pass



def setLensFlare(enabled):
    '''
    Enables / disables the visibility of lens flares for this camera.
    '''
    pass



def setMotionBlur(enabled):
    '''
    Enables / disables motion blur for the camera.
    '''
    pass



def setNearClippingDistance(value):
    '''
    Sets the distance of the near clipping plane.
    '''
    pass



def setOrthographicSize(size):
    '''
    Sets the orthographic size.
    '''
    pass



def setPrincipalPointOffset(offset):
    '''
    Sets the principal point offset.
    '''
    pass



def setProjectionMode(mode):
    '''
    Sets the projection mode for the camera.
    '''
    pass



def setRoll(value):
    '''
    Sets the camera roll.
    '''
    pass



def setSensorSize(size):
    '''
    Sets the sensor size.
    '''
    pass



def setShutterSpeed(value):
    '''
    Sets the shutter speed used for motion blur.
    '''
    pass



def setSkew(value):
    '''
    Sets the skew factor of the camera.
    '''
    pass



def setStereoEyeSeparation(value):
    '''
    Sets eye separation used during omnidirectional stereo rendering.
    '''
    pass



def setStereoLayout(layout):
    '''
    Sets the image layout during omnidirectional stereo rendering.
    '''
    pass



def setStereoPolarMergeAngle(value):
    '''
    Sets the polar merge angle used during omnidirectional stereo rendering.
    '''
    pass



def setToCurrentView():
    '''
    Applies the current viewport transformation to the camera.
    '''
    pass



def setViewpointTransition(enabled):
    '''
    Enables / disables a transition animation between viewpoints.
    '''
    pass



def setViewpointTransitionDuration(seconds):
    '''
    Sets the duration of viewpoint transitions.
    '''
    pass



def setVignetteFeather(value):
    '''
    Sets the vignette feather.
    '''
    pass



def setVignetteRadius(value):
    '''
    Sets the radius of the vignette used for blending.
    '''
    pass



def setVignetteRoundness(value):
    '''
    Sets the vignette roundness.
    '''
    pass



def setWireframeRendering(enabled):
    '''
    Enables / disables wireframe rendering.
    '''
    pass



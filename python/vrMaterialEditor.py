
# Autogenerated method stubs for 'vrMaterialEditor.py' module
# VRED Version: 13.0
# 
# VRED-Py - Visual Studio Code Tools for Autodesk VRED
# Copyright: Christopher Gebhardt 2020



def applyEnvToSelectedNodes(nodes):
    '''
    @param mat: The pointer to the environment material.

@type mat: MaterialPtr

@param nodes: List of nodes 

@type nodes: list of NodePtr
    '''
    pass



def applySubstancePresetByIndex(mat, index):
    '''
    Applies an existing substance preset to the given substance material.

@param mat: The pointer to the material. This needs to be a SubstanceMaterial.

@type mat: MaterialPtr

@param index: The index of the preset. A list of presets can be queried with getSubstancePresets().

@type index: integer
    '''
    pass



def applySubstancePresetByName(mat, name):
    '''
    Applies an existing substance preset to the given substance material.

@param mat: The pointer to the material. This needs to be a SubstanceMaterial.

@type mat: MaterialPtr

@param name: The name of the preset. A list of presets can be queried with getSubstancePresets().

@type name: string
    '''
    pass



def applySubstancePresetWithDefaultOutputSizeByIndex(mat, index):
    '''
    Applies an existing substance preset with default output size to the given substance material.

@param mat: The pointer to the material. This needs to be a SubstanceMaterial.

@type mat: MaterialPtr

@param index: The index of the preset. A list of presets can be queried with getSubstancePresets().

@type index: integer
    '''
    pass



def applySubstancePresetWithDefaultOutputSizeByName(mat, name):
    '''
    Applies an existing substance preset with default output size to the given substance material.

@param mat: The pointer to the material. This needs to be a SubstanceMaterial.

@type mat: MaterialPtr

@param name: The name of the preset. A list of presets can be queried with getSubstancePresets().

@type name: string
    '''
    pass



def clearSubstancePresetCache():
    '''
    Clears the substance preset cache.
    '''
    pass



def deleteMaterials(mat_name):
    '''
    Delete materials or material groups.

@param mat_name: List of MaterialGroup or Group nodes.

@type  mat_name: list of NodePtr
    '''
    pass



def enableSubstancePresetCache(enabled):
    '''
    Enables caching of preset render results. Switching presets will get faster but more memory and disk space is required.

@param enabled: Enables or disables the caching

@type bool
    '''
    pass



def getSelectedMaterials():
    '''
    Returns a list of the selected materials of the group view.

@return: The list of selected materials.

@rtype: list of vrMaterialPtrs
    '''
    pass



def getSubstanceArchivePath(mat):
    '''
    Returns the path to the substance archive contained in the given substance material.

@param mat: The pointer to the material. This needs to be a SubstanceMaterial.

@type mat: MaterialPtr
    '''
    pass



def getSubstancePresets(mat):
    '''
    Returns the list of presets contained in the given substance material.

@param mat: The pointer to the material. This needs to be a SubstanceMaterial.

@type mat: MaterialPtr
    '''
    pass



def importMaterialLibraryAndApply(filename):
    '''
    This function is deprecated. Use applyMaterialAssetsByName instead.
Loads the specified material library from an .osb file and applies it to the scene.

@param filename: The path to the material library.

@type filename: string
    '''
    pass



def loadMeasurement(mat, measurementFilePath):
    '''
    Loads a measurement file to the given material.

@param mat: The pointer to the material. This needs to be an XRiteMeasuredMaterial or OCSMaterial.

@type mat: MaterialPtr

@param measurementFilePath: The path to the measurement file.

@type measurementFilePath: string
    '''
    pass



def loadSubstanceArchive(mat, archiveFilePath):
    '''
    Loads a substance archive to the given substance material.

@param mat: The pointer to the material. This needs to be a SubstanceMaterial.

@type mat: MaterialPtr

@param archiveFilePath: The path to a substance archive.

@type archiveFilePath: string
    '''
    pass



def loadSubstancePresets(mat, presetsFilePath):
    '''
    Loads a substance presets file to the given substance material.

@param mat: The pointer to the material. This needs to be a SubstanceMaterial.

@type mat: MaterialPtr

@param presetsFilePath: The path to a substance presets file.

@type presetsFilePath: string
    '''
    pass



def selectMaterial(mat):
    '''
    Selects a material by material id or material pointer.

@param mat: The pointer to the material or the material id.

@type mat: MaterialPtr or unsigned integer
    '''
    pass



def selectMaterialByIndex(i):
    '''
    Selects a material by index.

@param i: The index.

@type i: unsigned integer
    '''
    pass



def selectMaterialByName(name):
    '''
    Selects a material by name.

@param name: The name.

@type name: string
    '''
    pass



def selectMaterialByNode(id):
    '''
    Selects a material by node id.

@param id: The node id.

@type id: unsigned integer
    '''
    pass



def selectMaterials(mats):
    '''
    Selects multiple materials by a list of material pointers.

@param mats: The material pointers.

@type mats: list of vrMaterialPtrs
    '''
    pass



def setMaterialAmbientColor(index, hue, saturation, value):
    '''
    Sets ambient color  of a SimpleMaterial or ChunkMaterialby material index. This function is deprecated!

@param index: The index of the material.

@type index: unsigned integer

@param hue: Hue.

@type hue: integer

@param saturation: Saturation.

@type saturation: integer

@param value: Value.

@type value: integer
    '''
    pass



def setMaterialDiffuseColor(index, hue, saturation, value):
    '''
    Sets diffuse color of a SimpleMaterial or ChunkMaterial by material index. This function is deprecated!

@param index: The index of the material.

@type index: unsigned integer

@param hue: Hue.

@type hue: integer

@param saturation: Saturation.

@type saturation: integer

@param value: Value.

@type value: integer
    '''
    pass



def setMeasuredCarpaintGlossyAsDiffuseLobes(mat, lobes):
    '''
    Sets which glossy lobes of an measured carpaint axf material are handled as diffuse when rendering with renderpasses!

@param mat: The measured material container

@type mat: vrMaterialPtr

@param lobes: The number of lobes considered to be diffuse. Default is 0 so only the real diffuse channel is used for the diffuse pass.

@type lobes: unsigned integer
    '''
    pass



def undeleteMaterials(mat_name):
    '''
    Restores materials from trash.

@param mat_name: List of MaterialGroup or Group nodes in trash.

@type  mat_name: list of NodePtr
    '''
    pass



def updateMaterials():
    '''
    Updates the material list.
    '''
    pass



def updateSubstanceMaterial(mat):
    '''
    Triggers an update of the given substance material.

@param mat: The pointer to the material. This needs to be a SubstanceMaterial.

@type mat: MaterialPtr
    '''
    pass



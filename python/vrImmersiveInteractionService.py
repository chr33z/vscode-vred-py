'''
vrImmersiveInteractionService
------------------------------------------
API version: v2 | Generation Date: 2020-05-01 | VRED-Py: Visual Studio Code Tools for Autodesk VRED | Autogenerated Method-Stubs

------------------------------------------
This service allows the management of all immersive device interactions that are built into VRED. It contains methods to activate or deactivate these interactions and to adjust their settings.
'''

from typing import List


class TeleportGroundMode():
    pass


class ControlMode():
    pass


class vrdDeviceMessageData():
    pass


class vrdNode():
    pass


class vrdRayIntersection():
    pass


class VisualizationMode():
    pass


def activateGroundCalibrationMode(rightHand: bool):
    '''
    Start ground calibration.
    '''
    pass


def getAutoCreateCollisionObjects() -> bool:
    '''
    Returns whether collision objects are automatically created.
    '''
    return None


def getControllerVisualizationMode() -> VisualizationMode:
    '''
    Returns the current controller visualization mode.
    '''
    return None


def getControlMode() -> ControlMode:
    '''
    Returns the current control mode.
    '''
    return None


def getPreferredTooltipsMode() -> bool:
    '''
    Returns whether to show tooltips on start.
    '''
    return None


def getRelativeTeleportOrientation() -> bool:
    '''
    Returns if the angle of the orientation is taken from the wrists absolute or relative rotation.
    '''
    return None


def getTeleportGroundHeight() -> float:
    '''
    Returns the height of the ground plane used in “On Ground Plane” teleport mode.
    '''
    return None


def getTeleportGroundMode() -> TeleportGroundMode:
    '''
    Returns the current teleport ground mode.
    '''
    return None


def getTeleportRange() -> float:
    '''
    Returns the maximum teleport distance.
    '''
    return None


def hideControllerMessage(message: vrdNode):
    '''
    Hide a controller message.
    '''
    pass


def isHmdActive() -> bool:
    '''
    Check if an HMD (VR) display mode is active.
    '''
    return None


def pickingMoved(hit: vrdRayIntersection):
    '''
    Triggers a pointer move event.
    '''
    pass


def pickingPressed(hit: vrdRayIntersection):
    '''
    Triggers a pointer button pressed event.
    '''
    pass


def pickingReleased(hit: vrdRayIntersection):
    '''
    Triggers a pointer button released event.
    '''
    pass


def setAutoCreateCollisionObjects(automatic: bool):
    '''
    Toggles collision object creation for touch-sensors and web-engines.
    '''
    pass


def setControllerVisualizationMode(mode: VisualizationMode):
    '''
    Sets the visualization mode for the HMD controllers.
    '''
    pass


def setControlMode(mode: ControlMode):
    '''
    Sets the controle mode and corresponding button mappings for the immersive interactions.
    '''
    pass


def setDefaultInteractionsActive(active: bool):
    '''
    Activates or deactivates all built-in interaction tools (teleport, pointer).
    '''
    pass


def setInteractionActive(name: str, active: bool):
    '''
    Activates or deactivates the specified interaction tool. Built-in interactions are named “Teleport”, “Pointer”.
    '''
    pass


def setPreferredControllerVisualizeMode(mode: VisualizationMode):
    '''
    Toggles the default visualisation style for the hands.
    '''
    pass


def setPreferredTooltipsMode(show: bool):
    '''
    Toggles whether to show tooltips when the session starts.
    '''
    pass


def setRelativeTeleportOrientation(isRelative: bool):
    '''
    Sets if the angle of the orientation is taken from the wrists absolute or relative rotation.
    '''
    pass


def setTeleportGroundHeight(height: float):
    '''
    Sets the height of the ground plane for the “On Ground Plane” teleport mode.
    '''
    pass


def setTeleportGroundMode(mode: TeleportGroundMode):
    '''
    Sets whether to teleport on scene geometries, or to teleport only on a virtual ground plane.
    '''
    pass


def setTeleportRange(range: float):
    '''
    Sets the maximum teleport distance.
    '''
    pass


def setViewpointMode(adjustHeight: bool, adjustOrientation: bool, adjustPosition: bool):
    '''
    Changes the default behavior for viewpoint selection. The actual camera position is the transformation of a viewpoint plus the transformation of the hmd. If adjustment is enabled, the camera position is modified in a way, that the resulting camera plus hmd position matches exaclty a viewpoint positon, height or orientation.
    '''
    pass


def showControllerMessage(data: vrdDeviceMessageData, rightHand: bool) -> vrdNode:
    '''
    Show a controller message depending on the provided data.
    '''
    return None


def automaticCollisionObjectCreationChanged(automatic: bool):
    '''
    Notifies about changed automatic collision-object creation preference.
    '''
    pass


def controllerVisualizationModeChanged(mode: VisualizationMode):
    '''
    Notifies about changed hand visualisation style.
    '''
    pass


def hmdStatusChanged(active: bool):
    '''
    This signal is triggered when HMD (VR) display mode is switched on or off.
    '''
    pass


def showTooltipsOnStartChanged(show: bool):
    '''
    Notifies about changed show tooltips on start.
    '''
    pass


def teleportGroundModeChanged(mode: TeleportGroundMode):
    '''
    Notifies about changed teleport ground mode.
    '''
    pass



# Autogenerated method stubs for 'vrConnector.py' module
# VRED Version: 13.0
# 
# VRED-Py - Visual Studio Code Tools for Autodesk VRED
# Copyright: Christopher Gebhardt 2020



def setConnectorMousePos(x, y):
    '''
    Set mouse position.

@param x: x pos.

@type x: int

@param y: y pos.

@type y: int@param w: width.

@type w: int@param h: height.

@type h: int
    '''
    pass



def setConnectorShowMouseOnClients(state):
    '''
    Enables/disables displaying the mouse on the clients.

@param state: show mouse: On/Off.

@type state: bool
    '''
    pass



def setVredFrameSync(state):
    '''
    Enables/disables frame sync.

@param state: Frame sync: On/Off.

@type state: bool
    '''
    pass



def startVredClient(serverIP, port):
    '''
    Starts a Client. The client can be used like an ordinary instance but will execute all navigation and python commands from the server.

@param serverIP: The IP address of the server.

@type serverIP: string

@param port: The port number.

@type port: integer

@return: Returns true on success, false otherwise.

@rtype: bool
    '''
    pass



def startVredServer(port):
    '''
    With the vrConnector you can connect two VRED instances synchronizing the navigation as well as python commands. One VRED instance will act as server which is sending all commands to the client. Both instances do not need to be running on the same machine, they can be run on different computers even over the internet as long as a connection between those can be established. Please note that only a lag-free connection ensures a fluent experience.

This function starts the server at the defined port.

@param port: The port number.

@type port: integer

@return: Returns true on success, false otherwise.

@rtype: bool
    '''
    pass



def stopVredClient():
    '''
    Stop Client. An established connection to a server is interrupted.
    '''
    pass



def stopVredServer():
    '''
    Stop the server. An established connection to a client is interrupted.
    '''
    pass



'''
vrdRayIntersection
------------------------------------------
API version: v2 | Generation Date: 2020-05-01 | VRED-Py: Visual Studio Code Tools for Autodesk VRED | Autogenerated Method-Stubs

------------------------------------------
Represents an intersection of an ray with a node in the scene.
'''

from typing import List


class vrdNode():
    pass


class QVector2D():
    pass


class QVector3D():
    pass


def getNode() -> vrdNode:
    '''
    Gets that node that has been hit.
    '''
    return None


def getNormal() -> QVector3D:
    '''
    The hit normal.
    '''
    return None


def getOrigin() -> QVector3D:
    '''
    Gets the origin of the ray that has used for the intersection test.
    '''
    return None


def getPoint() -> QVector3D:
    '''
    Gets the point that has been hit.
    '''
    return None


def getUV() -> QVector2D:
    '''
    Gets the uv coordinates of the texture where the hit occured.
    '''
    return None


def hasHit() -> bool:
    '''
    Returns if an actual hit occured.
    '''
    return None


def setHit(value: bool):
    '''
    Sets if a hit occured.
    '''
    pass


def setNode(value: vrdNode):
    '''
    Sets the node that has been hit.
    '''
    pass


def setNormal(value: QVector3D):
    '''
    Sets the hit normal.
    '''
    pass


def setOrigin(value: QVector3D):
    '''
    Sets the origin of the ray that has been used for the intersection test.
    '''
    pass


def setPoint(value: QVector3D):
    '''
    Sets the point that has been hit.
    '''
    pass


def setUV(value: QVector2D):
    '''
    Sets the uv coordinates of the texture where the hit occured.
    '''
    pass


def vrdRayIntersection():
    '''
    Default constructor.
    '''
    pass


def vrdRayIntersection(hasHit: bool, node: vrdNode, origin: QVector3D, point: QVector3D, normal: QVector3D, uv: QVector2D):
    '''
    Constructor.
    '''
    pass



# Autogenerated method stubs for 'vrVariantSets.py' module
# VRED Version: 13.0
# 
# VRED-Py - Visual Studio Code Tools for Autodesk VRED
# Copyright: Christopher Gebhardt 2020



def beginDissection():
    '''
    Starts the dissection process. This saves the current state of all material and geometry variants and then disables all nodes in the scene graph.

@return: True on success, false otherwise.

@rtype: bool
    '''
    pass



def captureVariantSetFromRootNodes(name, roots, inclNodes, inclMaterials, inclLights, inclEnvs, inclView, inclRenderlayerStates, sendMsg):
    '''
    Captures variants to an existing variant set. Use createVariantSet(name) before capturing to create a new variant set.

@param name: The name of the variant set.

@type name: string

@param roots: The root nodes to capture from.

@type roots: list of vrNodePtrs

@param inclNodes: The flag for capturing node state(inactive nodes only) and switch state.

@type inclNodes: bool

@param inclMaterials: The flag for tracking materials internally in variant set and capturing material switch state.

@type inclMaterials: bool

@param inclLights: The flag for capturing active/inactive light node.

@type inclLights: bool

@param inclEnvs: The flag for capturing active/inactive environment nodes, switch state and material.

@type inclEnvs: bool

@param inclView: The flag for capturing the current camera and creating a view from this. Created viewpoint is set to default viewpoint.

@type inclView: bool

@param inclRenderlayerStates: The flag for capturing the current render layer states.

@type inclRenderlayerStates: bool

@param sendMsg: The flag to send message when creating variants.

@type sendMsg: bool
    '''
    pass



def createVariantSet(name):
    '''
    Creates a variant set.

@param name: The name of the variant set.

@type name: string

@return: The Variant Set.

@rtype: vrVariantSet
    '''
    pass



def createVariantSetGroup(name):
    '''
    Creates a variant set group.

@param name: The name of the variant set group.

@type name: string
    '''
    pass



def deleteVariantSet(name):
    '''
    Deletes a variant set.

@param name: The name of the variant set.

@type name: string
    '''
    pass



def deleteVariantSetGroup(name):
    '''
    Deletes a variant set group. The variant sets of the group will be ungrouped and not be deleted.

@param name: The name of the variant set group.

@type name: string
    '''
    pass



def dissectionSnapshot(filename, width, height, ssf):
    '''
    Creates a snapshot in dissection mode. Actually, there are 4 versions of it:

dissectionSnapshot() creates a snapshot in default size (from the preferences). The user will be asked for a filename.

dissectionSnapshot(filename) creates a snapshot in default size (from the preferences).

dissectionSnapshot(filename,width,height) creates a snapshot in specified size.

dissectionSnapshot(filename,width,height,ssf) creates a snapshot in specified size and with the provided supersampling factor.

@param filename: The name of the file.

@type filename: string

@param width: The width (-1 to use default).

@type width: integer

@param height: The height (-1 to use default).

@type height: integer

@param ssf: The supersampling factor (-1 to use default).

@type ssf: integer
    '''
    pass



def endDissection():
    '''
    Ends the dissection process. This restores the previously saved state of all materials and nodes.

@return: True on success, false otherwise.

@rtype: bool
    '''
    pass



def getGroupedVariantSets():
    '''
    Gets all variant sets.

@return: The Variant Sets.

@rtype: dict
    '''
    pass



def getMaterialVariantCurrent(name):
    '''
    Returns the current state of a material variant.

@param name: The name of the material variant.

@type name: string

@return: The current state.

@rtype: string
    '''
    pass



def getMaterialVariantDefault(name):
    '''
    Returns the default state of a material variant.

@param name: The name of the material variant.

@type name: string

@return: The default state.

@rtype: string
    '''
    pass



def getMaterialVariantStates(name):
    '''
    Returns all possible states of a material variant.

@param name: The name of the material variant.

@type name: string

@return: The states.

@rtype: list of strings
    '''
    pass



def getMaterialVariants(name):
    '''
    Returns a list of all material variants of a single variant set or a list of all material variants of all variant sets if you omit the name parameter.

@param name: The name of the variant set. This parameter can be omitted.

@type name: string

@return: The material variants.

@rtype: list of strings
    '''
    pass



def getNodeVariantCurrent(name):
    '''
    Returns the current state of a node variant.

@param name: The name of the node variant.

@type name: string

@return: The current state.

@rtype: string
    '''
    pass



def getNodeVariantDefault(name):
    '''
    Returns the default state of a node variant.

@param name: The name of the node variant.

@type name: string

@return: The default state.

@rtype: string
    '''
    pass



def getNodeVariantStates(name):
    '''
    Returns all possible states of a node variant.

@param name: The name of the node variant.

@type name: string

@return: The states.

@rtype: list of strings
    '''
    pass



def getNodeVariants(name):
    '''
    Returns a list of all node variants of a single variant set or a list of all node variants of all variant sets set if you omit the name parameter.

@param name: The name of the variant set. This parameter can be omitted.

@type name: string

@return: The node variants.

@rtype: list of strings
    '''
    pass



def getVariantAnimations(name):
    '''
    Returns a list of all animations of a variant set.

@param name: The name of the variant set.

@type name: string

@return: The animations.

@rtype: list of strings
    '''
    pass



def getVariantSet(name):
    '''
    Gets a variant set.

@param name: The name of the variant set.

@type name: string

@return: The Variant Set.

@rtype: vrVariantSet
    '''
    pass



def getVariantSetPreview(name):
    '''
    Get a preview image for the variant set (if it has one).

Convert returned data to Base64: C{base64.b64encode(getVariantSetPreview("View"))}

@param name: The name of the variant set.

@type name: string

@return: bytes of a png image.

@rtype: string
    '''
    pass



def getVariantSets():
    '''
    Returns a list of all defined variant sets.

@return: The variant sets.

@rtype: list of strings
    '''
    pass



def getVariantViewPoints(name):
    '''
    Returns a list of all viewpoints belonging to a variant set.

@param name: The name of the variant set.

@type name: string

@return: The viewpoints.

@rtype: list of strings
    '''
    pass



def hideMaterialVariantGeometry(name):
    '''
    Disables the geometry that is switched by a material variant.

@param name: The name of the material variant.

@type name: string
    '''
    pass



def hideNodeVariantGeometry(name):
    '''
    Disables the geometry that is switched by a node variant.

@param name: The name of the node variant.

@type name: string
    '''
    pass



def hideVariantSetGeometry(name):
    '''
    Disables the geometry that is switched by a variant set.

@param name: The name of the variant set.

@type name: string
    '''
    pass



def loadVariants(name):
    '''
    Loads variant definitions from an XML file.

@param name: The name of the XML file.

@type name: string
    '''
    pass



def moveVariantSetToGroup(variantSetGroupName):
    '''
    @param variantSetName: The name of the variant set.

@type variantSetName: string

@param variantSetGroupName: The name of the group.

@type variantSetGroupName: string

@rtype: vrVariantSet
    '''
    pass



def renderVariantSetPreview(name):
    '''
    Render variant set preview .

@param name: The name of the variant set.

@type name: string
    '''
    pass



def saveSwitchedGeometry(filename):
    '''
    Saves the current switched geometry/materials into a file. Unused parts of the scene as well as unused materials will not be saved to disk. The file will only contain geometry and materials that are really needed for the actual scene. Depending on the configuration of your scene this file could be much smaller than the original.

@param filename: The name of the file. If this parameter is omitted a file dialog pops up and asks the user for a filename.

@type filename: string

@return: True on success, false otherwise.

@rtype: bool
    '''
    pass



def saveVariants(name):
    '''
    Saves the variant definitions to an XML file.

@param name: The name of the XML file.

@type name: string
    '''
    pass



def selectMaterialVariant(name, state):
    '''
    Activates a state of a material variant. The parameter "state" allows possible values like "!Previous", "!Previous (Loop)", "!Next" and "!Next (Loop)" to cycle through or the name of the material to be activated.

@param name: The name of the material variant.

@type name: string

@param state: The name of the state. If this parameter is omitted, the default state will be activated.

@type state: string
    '''
    pass



def selectNodeVariant(name, state):
    '''
    Activates a state of a node variant. The parameter "state" allows possible values depending on the type of node variant.

For a typical node like a geometry or a group "!Enable", "!Disable" and "!Toggle" are possible, for a switch variant it is possible to enable all children with "!All", disable all children with "!None", cycle through with "!Previous", "!Previous (Loop)", "!Next" and "!Next (Loop)" or choose the appropriate child simply with its name. If this parameter is omitted, the default state will be activated.

@param name: The name of the node variant.

@type name: string

@param state: The name of the state to be activated. If this parameter is omitted, the default state will be activated.

@type state: string
    '''
    pass



def selectVariantSetDefault(name):
    '''
    Activates the default state of a variant set. All its associated node and material variants will be set to their defaults, respectively.

@param name: The name of the variant set.

@type name: string
    '''
    pass



def showMaterialVariantGeometry(name):
    '''
    Enables the geometry that is switched by a material variant.

@param name: The name of the material variant.

@type name: string
    '''
    pass



def showNodeVariantGeometry(name):
    '''
    Enables the geometry that is switched by a node variant.

@param name: The name of the node variant.

@type name: string
    '''
    pass



def showVariantSetGeometry(name):
    '''
    Enables the geometry that is switched by a variant set.

@param name: The name of the variant set.

@type name: string
    '''
    pass



'''
Autogenerated Method-Stub for:
module vrdRayFile
------------------------------------------

API version: v2
Generation Date: 2020-04-24

VRED-Py: Visual Studio Code Tools for Autodesk VRED
'''

from typing import List



def clear():
    '''
    Clears the loaded file.
    '''
    pass



def getDirectEvaluationConeAngle():
    '''
    Returns the cone of valid directions used when directly looking into a ray file.
    '''
    pass



def getDirectEvaluationOffset():
    '''
    Returns the offset along the surface normal to be used when directly looking into a ray file. Use this to fix lookup surfaces that are not exactly where the ray origins are.
    '''
    pass



def getDirectEvaluationRadius():
    '''
    Returns the radius to be used for lookup when directly looking into a ray file.
    '''
    pass



def getFileName():
    '''
    Returns the file name of the ray file.
    '''
    pass



def getRayFileInfo():
    '''
    Returns ray file information.
    '''
    pass



def getUsePhotonsForDirectLighting():
    '''
    Returns whether photon mapping for direct lighting is used or not. If disabled, ray lights can be used without photon mapping but it is necessary to define surface with ray light evaluation turned on. These surfaces will then act as light sources using all the ray files that are within the given radius.
    '''
    pass



def getUseRandomSampling():
    '''
    Returns if random sampling of the rays is used.
    '''
    pass



def getVisualizationRayCount():
    '''
    Returns the number of rays used for the viewport visualization.
    '''
    pass



def getVisualizationRayLength():
    '''
    Returns the length used for the viewport visualization of rays.
    '''
    pass



def load(filename):
    '''
    Loads the given file.
    '''
    pass



def reload():
    '''
    Reloads the current file.
    '''
    pass



def setDirectEvaluationConeAngle(angle):
    '''
    Sets the cone of valid directions to be used when directly looking into a ray file.
    '''
    pass



def setDirectEvaluationOffset(offset):
    '''
    Sets the offset along the surface normal to be used when directly looking into a ray file. Use this to fix lookup surfaces that are not exactly where the ray origins are.
    '''
    pass



def setDirectEvaluationRadius(radius):
    '''
    Sets the radius to be used for lookup when directly looking into a ray file.
    '''
    pass



def setFileName(fileName):
    '''
    Loads the given ray file and sets the file name.
    '''
    pass



def setTo(other):
    '''
    Shares data of ray file in order to reduce memory consumption. Note that when a ray file is no longer used by any light it will be removed and needs to be reloaded from disk again.
    '''
    pass



def setUsePhotonsForDirectLighting(use):
    '''
    Toggles whether to use photon mapping for direct lighting or not. If disabled, ray lights can be used without photon mapping but it is necessary to define surface with ray light evaluation turned on. These surfaces will then act as light sources using all the ray files that are within the given radius.
    '''
    pass



def setUseRandomSampling(use):
    '''
    Uses random sampling of the rays. Use this if you have more than one luminaire in your ray file.
    '''
    pass



def setVisualizationRayCount(count):
    '''
    Sets the number of rays used for the viewport visualization.
    '''
    pass



def setVisualizationRayLength(length):
    '''
    Sets the length of used for the viewport visualization of rays.
    '''
    pass



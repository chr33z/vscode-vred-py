'''
vrdTonemapper
------------------------------------------
API version: v2 | Generation Date: 2020-05-01 | VRED-Py: Visual Studio Code Tools for Autodesk VRED | Autogenerated Method-Stubs

------------------------------------------
Class to access tonemapping functionality.
'''

from typing import List


class QVector2D():
    pass


class CameraCandelaMapping():
    pass


class CameraTonemapper():
    pass


class CameraResponseCurveMode():
    pass


class CameraColorspace():
    pass


class CameraSensorResponse():
    pass


def getBlueResponseCurve() -> List[QVector2D]:
    '''
    Returns the blue response curve.
    '''
    return None


def getCandelaMappingMode() -> CameraCandelaMapping:
    '''
    Returns the candela mapping mode.
    '''
    return None


def getCandelaRange() -> QVector2D:
    '''
    Returns the candela range.
    '''
    return None


def getColorspace() -> CameraColorspace:
    '''
    Returns the colorspace.
    '''
    return None


def getContrast() -> float:
    '''
    Returns the contrast.
    '''
    return None


def getExposure() -> float:
    '''
    Returns the exposure of the camera.
    '''
    return None


def getGreenResponseCurve() -> List[QVector2D]:
    '''
    Returns the green response curve.
    '''
    return None


def getISO() -> float:
    '''
    Returns the ISO of the camera.
    '''
    return None


def getLuminanceResponseCurve() -> List[QVector2D]:
    '''
    Returns the luminance response curve.
    '''
    return None


def getRedResponseCurve() -> List[QVector2D]:
    '''
    Returns the red response curve.
    '''
    return None


def getResponseCurveMode() -> CameraResponseCurveMode:
    '''
    Returns the active response curve mode.
    '''
    return None


def getSensorResponse() -> CameraSensorResponse:
    '''
    Returns the sensor response of the camera.
    '''
    return None


def getShoulderStrength() -> float:
    '''
    Returns the shoulder strength.
    '''
    return None


def getToeStrength() -> float:
    '''
    Returns the toe strength.
    '''
    return None


def getTonemapperType() -> CameraTonemapper:
    '''
    Returns the active tonemapper type.
    '''
    return None


def getWhiteBalance() -> float:
    '''
    Returns the white balance of the camera.
    '''
    return None


def getWhitePoint() -> float:
    '''
    Returns the white point of the camera.
    '''
    return None


def loadResponseCurve(fileName: str) -> bool:
    '''
    Loads a saved response curve from a file.
    '''
    return None


def saveResponseCurve(fileName: str) -> bool:
    '''
    Saves the response curve to a file.
    '''
    return None


def setBlueResponseCurve(values: List[QVector2D]):
    '''
    Sets the blue response curve.
    '''
    pass


def setCandelaMappingMode(mapping: CameraCandelaMapping):
    '''
    Sets the candela mapping mode.
    '''
    pass


def setCandelaRange(rangeMinMax: QVector2D):
    '''
    Sets the candela range.
    '''
    pass


def setColorspace(value: CameraColorspace):
    '''
    Sets the colorspace.
    '''
    pass


def setContrast(value: float):
    '''
    Sets the contrast.
    '''
    pass


def setExposure(value: float):
    '''
    Sets the exposure of the camera.
    '''
    pass


def setGreenResponseCurve(values: List[QVector2D]):
    '''
    Sets the green response curve.
    '''
    pass


def setISO(value: float):
    '''
    Sets the ISO of the camera.
    '''
    pass


def setLuminanceResponseCurve(values: List[QVector2D]):
    '''
    Sets the luminance response curve.
    '''
    pass


def setRedResponseCurve(values: List[QVector2D]):
    '''
    Sets the red response curve.
    '''
    pass


def setResponseCurveMode(mode: CameraResponseCurveMode):
    '''
    Sets the response curve mode.
    '''
    pass


def setSensorResponse(value: CameraSensorResponse):
    '''
    Sets the sensor response of the camera.
    '''
    pass


def setShoulderStrength(value: float):
    '''
    Sets the shoulder strength.
    '''
    pass


def setToeStrength(value: float):
    '''
    Sets the toe strength.
    '''
    pass


def setTonemapperType(mapper: CameraTonemapper):
    '''
    Sets the tonemapper type.
    '''
    pass


def setWhiteBalance(value: float):
    '''
    Sets the white balance of the camera.
    '''
    pass


def setWhitePoint(value: float):
    '''
    Sets the white point of the camera.
    '''
    pass


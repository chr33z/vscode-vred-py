'''
vrOptimize
------------------------------------------
API version: v1 | Generation Date: 2020-05-01 | VRED-Py: Visual Studio Code Tools for Autodesk VRED | Autogenerated Method-Stubs

------------------------------------------

'''

from typing import List


def cleanupGroupNodes(recursive, root_node):
    '''
    Cleanup group nodes.
    '''
    pass


def createMultiMaterials(root_node):
    '''
    Create multi-materials for a given subgraph.
    '''
    pass


def createOcTree(root_node):
    '''
    Transform all geometries by an octree structure.
    '''
    pass


def flushMaterialGroups(root_node):
    '''
    The materials of a MaterialGroup will be flushed into the underlying geometries and the MaterialGroups will be transformed into group nodes.
    '''
    pass


def flushRotations(root_node):
    '''
    Moves rotation-related transform information of selected sub-tree to the geometry nodes on lowest level.
    '''
    pass


def flushScales(root_node):
    '''
    Moves scale-related transform information of selected subtree to the geometry nodes on lowest level.
    '''
    pass


def flushSelectedTransformation(node):
    '''
    Moves transformation of selected node to the geometry nodes on lowest level.
    '''
    pass


def flushTexGen(root_node):
    '''
    Flush gen funcs.
    '''
    pass


def flushTexTransform(root_node):
    '''
    Flush texture transformations.
    '''
    pass


def flushTransformations(root_node):
    '''
    Flush transformations.
    '''
    pass


def flushTransformationsKeepFaceNormals(root_node):
    '''
    Flush transformations.
    '''
    pass


def flushTranslations(root_node):
    '''
    Moves translation-related transform information of selected sub-tree to the geometry nodes on lowest level.
    '''
    pass


def measureCacheEfficiency(cache_size, root_node):
    '''
    Measures the cache efficiency.
    '''
    pass


def mergeGeometry(root_node):
    '''
    Merges geometry nodes.
    '''
    pass


def optimizeGeometry(fans, strips, stitches, root_node):
    '''
    Optimizes geometry to speed up rendering.
    '''
    pass


def optimizeIndices(root_node):
    '''
    Optimize indices to improve render speed.
    '''
    pass


def optimizeMaterials(root_node):
    '''
    Optimize the specified scenegraph by using as few materials as possible.
    '''
    pass


def optimizeTree(options, root_node):
    '''
    Optimizes the scenegraph by applying specified optimization functions.
    '''
    pass


def removeAnimations(root_node):
    '''
    Removes all animations from nodes in the selected sub-tree.
    '''
    pass


def removeBSides(root_node):
    '''
    Removes all geometries that are set to B-side from the selected sub-tree.
    '''
    pass


def removeDegPolys(root_node):
    '''
    Degenerated Polygons (covering an area of size 0) will be removed.
    '''
    pass


def removeEmptyGeometries(root_node):
    '''
    Removes empty geometry nodes.
    '''
    pass


def removeEmptyShells(root_node):
    '''
    Removes empty shell nodes.
    '''
    pass


def removeIdentityTransforms(root_node):
    '''
    Removes identity Transforms.
    '''
    pass


def removeInvalidTexCoords(root_node):
    '''
    Remove invalid texture coordinates.
    '''
    pass


def removeLODNodes(root_node):
    '''
    Remove LOD nodes.
    '''
    pass


def removeLines(root_node):
    '''
    Remove line geometries from the scene representation.
    '''
    pass


def removeMaterialGroups(root_node):
    '''
    Remove material groups.
    '''
    pass


def removeNURBS(root_node):
    '''
    Remove the NURBS information of the selected Node hierarchy.
    '''
    pass


def removePoints(root_node):
    '''
    Remove point geometries from the scene representation.
    '''
    pass


def removeSwitchNodes(root_node):
    '''
    Remove Switch nodes from a given subgraph.
    '''
    pass


def removeTransformNodesWithNoChildren(root_node):
    '''
    Removes all transform nodes with no children.
    '''
    pass


def removeTransformVariants(root_node):
    '''
    Removes all transform variants from nodes in the selected sub-tree.
    '''
    pass


def removeUnusedMaterials():
    '''
    Removes unused materials.
    '''
    pass


def separateGeoProperties(root_node):
    '''
    Separate shared geometry properties.
    '''
    pass


def shareGeometries(checkWorldMatrix, root_node):
    '''
    Shares equal geometry nodes.
    '''
    pass


def shareImages():
    '''
    Share images.
    '''
    pass


def sharePtrs(types, root_node):
    '''
    Share pointers.
    '''
    pass


def sortIndices(root_node):
    '''
    Sort indices to improve render speed.
    '''
    pass


def tipsifyIndices(cache_size, root_node):
    '''
    Optimize indices to improve render speed.
    '''
    pass


def triangulate(recreateAllProperties, root_node):
    '''
    Triangulate the geometries.
    '''
    pass


def unflushMaterialGroups(root_node):
    '''
    The materials within a geometry will be removed, instead a MaterialGroup with the material will be placed above.
    '''
    pass


def unifyVertices(root_node):
    '''
    Optimize the geometry by creating shared indices and removing unused and double coords, colors, and texcoords.
    '''
    pass


def verifyGeometry(root_node):
    '''
    Verifies geometry nodes.
    '''
    pass


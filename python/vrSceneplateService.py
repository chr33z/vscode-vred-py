'''
vrSceneplateService
------------------------------------------
API version: v2 | Generation Date: 2020-05-01 | VRED-Py: Visual Studio Code Tools for Autodesk VRED | Autogenerated Method-Stubs

------------------------------------------
Base class for all work with scene plate.
'''

from typing import List


class NodeType():
    pass


class QImage():
    pass


class vrdSceneplateNode():
    pass


class vrdNode():
    pass


class QVector3D():
    pass


class vrdSwitchNode():
    pass


def clearSelection():
    '''
    Clears the current sceneplate selection.
    '''
    pass


def copyNodes(nodes: List[vrdNode]):
    '''
    Copy Nodes.
    '''
    pass


def createGroupForNodes(nodes: List[vrdNode]) -> vrdNode:
    '''
    All given nodes will be moved to a new created group.
    '''
    return None


def createNode(parent: vrdNode, type: NodeType, name: str) -> vrdNode:
    '''
    Creates a new sceneplate node.
    '''
    return None


def createSwitchForNodes(nodes: List[vrdNode]) -> vrdSwitchNode:
    '''
    All given nodes will be moved to a new created switch.
    '''
    return None


def cutNodes(nodes: List[vrdNode]):
    '''
    Cut nodes.
    '''
    pass


def duplicateNodes(nodes: List[vrdNode]):
    '''
    Duplicate the nodes.
    '''
    pass


def findNode(name: str) -> vrdNode:
    '''
    Returns the first node found in sceneplate hierarchy with the given name.
    '''
    return None


def findNodes(name: str) -> List[vrdNode]:
    '''
    Returns list of nodes found in sceneplate hierarchy with the given name.
    '''
    return None


def getAllNodes() -> List[vrdNode]:
    '''
    Returns all nodes (sceneplates, groups and switches)
    '''
    return None


def getAllSceneplates() -> List[vrdSceneplateNode]:
    '''
    Returns all sceneplates (excluding groups and switches)
    '''
    return None


def getDefaultBackgroundColor() -> QVector3D:
    '''
    Returns the default background color for new created (text) sceneplates.
    '''
    return None


def getDefaultBackgroundTransparency() -> float:
    '''
    Returns the default background transparency for new created (text) sceneplates.
    '''
    return None


def getDefaultFont() -> str:
    '''
    Returns the default font for new created (text) sceneplates.
    '''
    return None


def getDefaultFontColor() -> QVector3D:
    '''
    Returns the default font color for new created (text) sceneplates.
    '''
    return None


def getPreviewImage(sceneplate: vrdNode) -> QImage:
    '''
    Returns an image for a node, the image shows the current content of the sceneplate. If a group or switch is selected the content of the first visible sceneplate will be returned.
    '''
    return None


def getRootNode() -> vrdNode:
    '''
    Returns the root node of all sceneplates.
    '''
    return None


def getSelectedNodes() -> List[vrdNode]:
    '''
    Returns the currently selected nodes.
    '''
    return None


def loadNodes(filename: str) -> bool:
    '''
    Load sceneplate nodes from file with the given name.
    '''
    return None


def pasteAllAttributes(nodes: List[vrdSceneplateNode]):
    '''
    Paste all attributes from the first node in copy buffer to the given nodes.
    '''
    pass


def pasteColorCorrection(nodes: List[vrdSceneplateNode]):
    '''
    Paste color correction setting from the first node in copy buffer to the given nodes.
    '''
    pass


def pasteNodes(targetRoot: vrdNode):
    '''
    Paste nodes.
    '''
    pass


def pasteProperties(nodes: List[vrdSceneplateNode]):
    '''
    Paste properties (all information about the content) from the first node in copy buffer to the given nodes.
    '''
    pass


def pasteSizeAndPosition(nodes: List[vrdSceneplateNode]):
    '''
    Paste size and position from the first node in copy buffer to the given nodes.
    '''
    pass


def reloadWebPage(nodes: List[vrdNode]):
    '''
    Reloads the web pages of the given nodes.
    '''
    pass


def removeAllGroups():
    '''
    Removes all groups (not switches) from the sceneplate hierarchy.
    '''
    pass


def removeNodes(nodes: List[vrdNode]):
    '''
    Remove nodes from sceneplates.
    '''
    pass


def saveNodes(filename: str, nodes: List[vrdNode]) -> bool:
    '''
    Saves the nodes to the file with the given name.
    '''
    return None


def setDefaultBackgroundColor(color: QVector3D):
    '''
    Sets the default background color for new created (text) sceneplates.
    '''
    pass


def setDefaultBackgroundTransparency(transparency: float):
    '''
    Sets the default background transparency for new created (text) sceneplates.
    '''
    pass


def setDefaultFont(font: str):
    '''
    Sets the default font for new created (text) sceneplates.
    '''
    pass


def setDefaultFontColor(color: QVector3D):
    '''
    Sets the default font color for new created (text) sceneplates.
    '''
    pass


def setSelectedNodes(nodes: List[vrdNode]):
    '''
    Sets the sceneplate selection.
    '''
    pass


def nodesAdded(nodes: List[vrdNode]):
    '''
    Notifies about nodes added to the sceneplate hierarchy.
    '''
    pass


def nodesChanged():
    '''
    Notifies about changes in node structure, e.g. after a new scene.
    '''
    pass


def nodesRemoved(nodes: List[vrdNode]):
    '''
    Notifies about nodes removed from the sceneplate hierarchy.
    '''
    pass


def nodesSelected(nodes: List[vrdNode]):
    '''
    Notifies about selection changes of sceneplates.
    '''
    pass


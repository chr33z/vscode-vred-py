'''
vrMovieExport
------------------------------------------
API version: v1 | Generation Date: 2020-05-01 | VRED-Py: Visual Studio Code Tools for Autodesk VRED | Autogenerated Method-Stubs

------------------------------------------

'''

from typing import List


def createMovie(filename, startFrame, ssf, height, alphaGreen, step, fps, stopFrame, tonemap_hdr, alpha_premultiply, alphaRed, alphaBlue, movie, alpha, width, overwrite):
    '''
    Method to create a movie.
    '''
    pass


def createSnapshot(filename, ssf, alphaGreen, height, tonemap_hdr, dpi, alpha_premultiply, alphaRed, alphaBlue, alpha, showImage, width, overwrite):
    '''
    Method to create a snapshot.
    '''
    pass


def createSnapshotFast(filename):
    '''
    Create a fast snapshot with the provided file name.
    '''
    pass


def createSnapshotFastInit(height, ssf, width):
    '''
    Initializes the fast snapshot method setting the image resolution to width times height.
    '''
    pass


def createSnapshotFastTerminate():
    '''
    Terminates the creation of a fast snapshot.
    '''
    pass


def createSnapshotStream():
    '''
    Documentation missing
    '''
    pass


def getExportExrHalf():
    '''
    Return if EXR is exported in 16 bit float format.
    '''
    pass


def getExportMultiLayer():
    '''
    Return if TIFF/PSD is exported as layers for render passes.
    '''
    pass


def getExportTiffHDR():
    '''
    Return if TIFF/PSD is exported in HDR format.
    '''
    pass


def getLastRenderTime():
    '''
    Returns the duration in seconds of the last image render.
    '''
    pass


def imageStream():
    '''
    Redirects image write operations of function into a string which is returned.
    '''
    pass


def imageStreamBase64():
    '''
    Redirects image write operations of function into a string which is returned
    '''
    pass


def renderAnimation(filename, startFrame, ssf, height, alphaGreen, fps, stopFrame, tonemap_hdr, alpha_premultiply, alphaRed, alphaBlue, alpha, width, overwrite, animation):
    '''
    This method writes an animation as a movie in the specified resolution and supersampling and alpha channel.
    '''
    pass


def renderStepAnimation(filename, startFrame, ssf, height, alphaGreen, step, fps, stopFrame, alpha_premultiply, alphaRed, alphaBlue, alpha, width, overwrite, animation):
    '''
    This method writes an animation as a movie in the specified resolution and supersampling and alpha channel.
    '''
    pass


def resetActiveSnapshotMovieRenderPasses():
    '''
    Resets the active renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass


def setActiveSnapshotMovieRenderPasses(specular_light_pass, depth_pass, glossy_indirect_pass, incandescence_pass, normal_pass, material_id_pass, beauty_pass, diffuse_indirect_pass, translucency_pass, occlusion_pass, glossy_light_pass, diffuse_light_pass, diffuse_ibl_pass, specular_reflection_pass, glossy_ibl_pass):
    '''
    Sets the active renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass


def setAuxiliaryChannelsRenderPasses(depth_pass, view_vector_pass, position_pass, normal_pass, material_id_pass, occlusion_pass, mask_pass, crypto_object_pass):
    '''
    Sets the active combined channels renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass


def setCombinedChannelsRenderPasses(glossy_indirect_pass, incandescence_pass, background_pass, transparency_pass, beauty_pass, diffuse_indirect_pass, translucency_pass, glossy_light_pass, diffuse_light_pass, diffuse_ibl_pass, specular_reflection_pass, glossy_ibl_pass):
    '''
    Sets the active combined channels renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass


def setExportExrHalf(on):
    '''
    Enables/Disables export of EXR format in 16 bit float.
    '''
    pass


def setExportMultiLayer(on):
    '''
    Enables/Disables export of TIFF/PSD as layers for render passes.
    '''
    pass


def setExportTiffHDR(on):
    '''
    Enables/Disables export of TIFF/PSD in HDR format.
    '''
    pass


def setIlluminationChannelsRenderPasses(translucency_indirect_pass, glossy_indirect_pass, translucency_ibl_pass, specular_indirect_pass, diffuse_indirect_pass, translucency_light_pass, glossy_light_pass, diffuse_light_pass, diffuse_ibl_pass, glossy_ibl_pass):
    '''
    Sets the active illumination channels renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass


def setImageProcessingRenderPasses(backplate_pass, fog_pass, frontplate_pass, lens_flare_pass):
    '''
    Sets the active image processing renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass


def setMaterialChannelsRenderPasses(glossy_material_pass, diffuse_material_pass, specular_material_pass, transparency_material_pass, translucency_material_pass):
    '''
    Sets the active material channels renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass


def setSnapshotEmbedMetaData(embedSwitchMaterialStates, embedRenderSettings, embedNodeVisibilities, embedSwitchNodeStates, embedCameraSettings):
    '''
    Sets which meta data to store within the output image.
    '''
    pass


def setSnapshotICCProfile(profileID):
    '''
    Sets the ICC Profile to store with the output image.
    '''
    pass


def setSnapshotNoShowImage(state):
    '''
    If state is set to true the rendered image is shown.
    '''
    pass


def setSnapshotQuality(quality):
    '''
    Sets the quality of the image to be exported.
    '''
    pass


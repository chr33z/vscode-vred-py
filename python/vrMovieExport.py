'''
Autogenerated Method-Stub for:
module vrMovieExport
------------------------------------------

API version: v1
Generation Date: 2020-04-24

VRED-Py: Visual Studio Code Tools for Autodesk VRED
'''

from typing import List



def createMovie(stopFrame, alpha_premultiply, startFrame, filename, width, ssf, height, alpha, alphaGreen, alphaBlue, fps, overwrite, movie, alphaRed, step, tonemap_hdr):
    '''
    Method to create a movie.
    '''
    pass



def createSnapshot(alpha_premultiply, filename, width, ssf, showImage, alpha, height, alphaGreen, alphaBlue, overwrite, alphaRed, dpi, tonemap_hdr):
    '''
    Method to create a snapshot.
    '''
    pass



def createSnapshotFast(filename):
    '''
    Create a fast snapshot with the provided file name.
    '''
    pass



def createSnapshotFastInit(width, ssf, height):
    '''
    Initializes the fast snapshot method setting the image resolution to width times height.
    '''
    pass



def createSnapshotFastTerminate():
    '''
    Terminates the creation of a fast snapshot.
    '''
    pass



def createSnapshotStream():
    '''
    Documentation missing
    '''
    pass



def getExportExrHalf():
    '''
    Return if EXR is exported in 16 bit float format.
    '''
    pass



def getExportMultiLayer():
    '''
    Return if TIFF/PSD is exported as layers for render passes.
    '''
    pass



def getExportTiffHDR():
    '''
    Return if TIFF/PSD is exported in HDR format.
    '''
    pass



def getLastRenderTime():
    '''
    Returns the duration in seconds of the last image render.
    '''
    pass



def imageStream():
    '''
    Redirects image write operations of function into a string which is returned.
    '''
    pass



def imageStreamBase64():
    '''
    Redirects image write operations of function into a string which is returned
    '''
    pass



def renderAnimation(stopFrame, alpha_premultiply, startFrame, filename, width, ssf, height, alpha, alphaGreen, alphaBlue, fps, animation, overwrite, alphaRed, tonemap_hdr):
    '''
    This method writes an animation as a movie in the specified resolution and supersampling and alpha channel.
    '''
    pass



def renderStepAnimation(stopFrame, alpha_premultiply, startFrame, filename, width, ssf, height, alpha, alphaGreen, alphaBlue, fps, animation, overwrite, alphaRed, step):
    '''
    This method writes an animation as a movie in the specified resolution and supersampling and alpha channel.
    '''
    pass



def resetActiveSnapshotMovieRenderPasses():
    '''
    Resets the active renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass



def setActiveSnapshotMovieRenderPasses(beauty_pass, specular_reflection_pass, glossy_light_pass, translucency_pass, diffuse_light_pass, glossy_ibl_pass, diffuse_ibl_pass, normal_pass, depth_pass, material_id_pass, incandescence_pass, occlusion_pass, diffuse_indirect_pass, specular_light_pass, glossy_indirect_pass):
    '''
    Sets the active renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass



def setAuxiliaryChannelsRenderPasses(position_pass, crypto_object_pass, material_id_pass, normal_pass, view_vector_pass, mask_pass, occlusion_pass, depth_pass):
    '''
    Sets the active combined channels renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass



def setCombinedChannelsRenderPasses(beauty_pass, specular_reflection_pass, glossy_light_pass, translucency_pass, diffuse_light_pass, glossy_ibl_pass, diffuse_ibl_pass, background_pass, transparency_pass, incandescence_pass, diffuse_indirect_pass, glossy_indirect_pass):
    '''
    Sets the active combined channels renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass



def setExportExrHalf(on):
    '''
    Enables/Disables export of EXR format in 16 bit float.
    '''
    pass



def setExportMultiLayer(on):
    '''
    Enables/Disables export of TIFF/PSD as layers for render passes.
    '''
    pass



def setExportTiffHDR(on):
    '''
    Enables/Disables export of TIFF/PSD in HDR format.
    '''
    pass



def setIlluminationChannelsRenderPasses(specular_indirect_pass, translucency_ibl_pass, glossy_light_pass, diffuse_light_pass, glossy_ibl_pass, diffuse_ibl_pass, translucency_indirect_pass, translucency_light_pass, diffuse_indirect_pass, glossy_indirect_pass):
    '''
    Sets the active illumination channels renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass



def setImageProcessingRenderPasses(frontplate_pass, fog_pass, backplate_pass, lens_flare_pass):
    '''
    Sets the active image processing renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass



def setMaterialChannelsRenderPasses(translucency_material_pass, glossy_material_pass, specular_material_pass, transparency_material_pass, diffuse_material_pass):
    '''
    Sets the active material channels renderpasses for rendering a snapshot using the createSnapshot or renderAnimation commands.
    '''
    pass



def setSnapshotEmbedMetaData(embedCameraSettings, embedSwitchNodeStates, embedNodeVisibilities, embedRenderSettings, embedSwitchMaterialStates):
    '''
    Sets which meta data to store within the output image.
    '''
    pass



def setSnapshotICCProfile(profileID):
    '''
    Sets the ICC Profile to store with the output image.
    '''
    pass



def setSnapshotNoShowImage(state):
    '''
    If state is set to true the rendered image is shown.
    '''
    pass



def setSnapshotQuality(quality):
    '''
    Sets the quality of the image to be exported.
    '''
    pass



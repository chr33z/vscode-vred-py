'''
Autogenerated Method-Stub for:
module vrSessionService
------------------------------------------

API version: v2
Generation Date: 2020-04-24

VRED-Py: Visual Studio Code Tools for Autodesk VRED
'''

from typing import List



def abortProgress():
    '''
    Aborts a running project file upload or download.
    '''
    pass



def addNodeSync(node):
    '''
    Transformation and visibility changes will by synchronized for all registered nodes This node sync is only used in python and does not affect transformations that are triggered by the transformation module or variant sets. By default functions like setTransformNodeXXXX are not synced automatically. Adding a node sync will send all changes, independent from the source of the change, to all connected users.
    '''
    pass



def blockSync(commandTypeName):
    '''
    Calling blockSync, blocks all synchronizations to other users.
    '''
    pass



def checkSessionLink(passwd, sessionLink):
    '''
    Checks if the password is valid.
    '''
    pass



def createSessionLink(server, passwd):
    '''
    Creates a connection string from the hostname and a password.
    '''
    pass



def getDefaultColors():
    '''
    Documentation missing
    '''
    pass



def getRemoteUsers():
    '''
    Documentation missing
    '''
    pass



def getSessionLink():
    '''
    Returns the connection string of the collaboration session.
    '''
    pass



def getSyncCommandNames():
    '''
    Get all known command type names. These names can be used in blockSync and unblockSync.
    '''
    pass



def getUser():
    '''
    Documentation missing
    '''
    pass



def getUsers():
    '''
    Documentation missing
    '''
    pass



def isConnected():
    '''
    Checks whether vred is connected to a collaboration session.
    '''
    pass



def isJoinCompleted():
    '''
    Checks whether the connection has been established.
    '''
    pass



def isMicrophoneMute():
    '''
    Get microphone muted state.
    '''
    pass



def isSpatialAudio():
    '''
    Get spatioal audio setting.
    '''
    pass



def isSpeakerMute():
    '''
    Get speaker muted state.
    '''
    pass



def join(sessionLink, userName, color, roomName, passwd, forceVersion):
    '''
    Joins an existing or creates a new vr collaboration sesson.
    '''
    pass



def leave():
    '''
    Leaves the collaboration session.
    '''
    pass



def removeNodeSync(node):
    '''
    Remove node from synchronization. Like addNodeSync, this does not have an effect on changes triggered by variant sets and other interactively triggered transformations.
    '''
    pass



def sendPython(command, commandId):
    '''
    Sends a python command to all other users.
    '''
    pass



def setAudioEnabled(value):
    '''
    Enables audio communication.
    '''
    pass



def setAvatarProximityOpaqueDistance(value):
    '''
    Changes the distance from which avatars are opaque.
    '''
    pass



def setAvatarProximityTransparentDistance(value):
    '''
    Changes the distance from which avatars become fully transparent.
    '''
    pass



def setAvatarSafetyOpaqueDistance(value):
    '''
    Changes the distance to fade safety avatars.
    '''
    pass



def setAvatarSafetyTransparentDistance(value):
    '''
    Changes distance to hide safety avatars.
    '''
    pass



def setMicrophoneLevel(value):
    '''
    Adjusts microphone level.
    '''
    pass



def setMicrophoneMute(value):
    '''
    Mutes the microphone.
    '''
    pass



def setPointerToolActive(on):
    '''
    Activates the pointing tool.
    '''
    pass



def setPointerVisible(value):
    '''
    Makes the pointing tool visible for all other users.
    '''
    pass



def setRoom(room):
    '''
    Changes the room name, used for safety avatar visualization.
    '''
    pass



def setSpatialAudio(value):
    '''
    Enables 3D sound for collaboration audio communications.
    '''
    pass



def setSpeakerLevel(value):
    '''
    Adjusts speaker volume.
    '''
    pass



def setSpeakerMute(value):
    '''
    Mutes the speaker.
    '''
    pass



def setUserColor(userColor):
    '''
    Change the user color.
    '''
    pass



def setUserName(userName):
    '''
    Changes the user name.
    '''
    pass



def showDesktopAvatar(on):
    '''
    Toggles how the local user is shown in desktop mode to the other users, either as tablet (default) or as avatar.
    '''
    pass



def spectate(on, userId):
    '''
    Turns spectator mode on or off.
    '''
    pass



def stopForAll():
    '''
    Stops the collaboration session for all connected users.
    '''
    pass



def syncNode(node):
    '''
    Synchronize position and visibility with all other users.
    '''
    pass



def toPythonString(matrix):
    '''
    Convert matrix to a python string that can used in sendPython.
    '''
    pass



def toPythonString(vector2d):
    '''
    Convert vector to a python string that can used in sendPython.
    '''
    pass



def toPythonString(vector3d):
    '''
    Convert vector to a python string that can used in sendPython.
    '''
    pass



def toPythonString(node):
    '''
    Convert a node to a python string that can used in sendPython.
    '''
    pass



def toPythonString(material):
    '''
    Convert a material to a python string that can used in sendPython.
    '''
    pass



def toPythonString(nodes):
    '''
    Convert a list of nodes to a python string that can used in sendPython.
    '''
    pass



def unblockSync(commandTypeName):
    '''
    Calling unblockSync resumes synchronizations to other users.
    '''
    pass



def uploadScene():
    '''
    Sends the current project in the memory to all connected users.
    '''
    pass



def uploadScenePath(path):
    '''
    Sends the path of the project to be loaded to all users.
    '''
    pass



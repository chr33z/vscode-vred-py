'''
vrFileIO
------------------------------------------
API version: v1 | Generation Date: 2020-05-01 | VRED-Py: Visual Studio Code Tools for Autodesk VRED | Autogenerated Method-Stubs

------------------------------------------

'''

from typing import List


def saveOSG(filename):
    '''
    Writes scene as ascii opensg file (debugging only).
    '''
    pass


def saveOSG(filename, options):
    '''
    Writes scene as ascii opensg file (debugging only).
    '''
    pass


def saveOSG(filename, node):
    '''
    Writes scene as ascii opensg file (debugging only).
    '''
    pass


def saveOSG(filename, options, node):
    '''
    Writes scene as ascii opensg file (debugging only).
    '''
    pass


def exportSceneSummary(filename, options, node):
    '''
    Writes the scene summary as an xml file (debugging only).
    '''
    pass


def exportSceneSummary(filename, node):
    '''
    Writes the scene summary as an xml file (debugging only).
    '''
    pass


def exportSceneSummary(filename, options):
    '''
    Writes the scene summary as an xml file (debugging only).
    '''
    pass


def exportSceneSummary(filename):
    '''
    Writes the scene summary as an xml file (debugging only).
    '''
    pass


def loadCloudProject(address):
    '''
    Load project from blob storage, given by address.
    '''
    pass


def loadCloudProject(token, address):
    '''
    Load project from blob storage, given by address.
    '''
    pass


def exportSelectedSurface(filename, version):
    '''
    Saves selected geometry file.
    '''
    pass


def findFile(filename):
    '''
    Find a filename relative to the fileio base directory.
    '''
    pass


def getApproximationEnabled():
    '''
    Returns if body approximation is enabled in import.
    '''
    pass


def getDisableMultithreadedImport():
    '''
    Returns if internal multithreading is disabled in CAD import.
    '''
    pass


def getFileIOBaseDir():
    '''
    Returns the base dir of the project.
    '''
    pass


def getFileIOFilePath():
    '''
    Returns the current loaded file path.
    '''
    pass


def getFixSurfaceOrientation():
    '''
    Returns if surface normals should be unified in import.
    '''
    pass


def getHealStitchEnabled():
    '''
    Returns if additional healing while stitch is enabled in import.
    '''
    pass


def getImportAssociativeMeshes():
    '''
    Returns if import should contain associative mesh geometry.
    '''
    pass


def getImportBookmarks():
    '''
    Returns if import should contain bookmarks.
    '''
    pass


def getImportCameras():
    '''
    Returns if import should contain cameras.
    '''
    pass


def getImportCurves():
    '''
    Returns if import should contain independent curves and poly-lines.
    '''
    pass


def getImportEmptyLayers():
    '''
    Returns if import should contain empty layers.
    '''
    pass


def getImportInvisibleCurves():
    '''
    Returns if import should contain invisible independent curves and poly-lines.
    '''
    pass


def getImportInvisibleInstances():
    '''
    Returns if import of invisible instances is enabled.
    '''
    pass


def getImportInvisibleMeshes():
    '''
    Returns if import should contain invisible mesh geometry.
    '''
    pass


def getImportInvisibleSurfaces():
    '''
    Returns if import should contain invisible NURB surfaces.
    '''
    pass


def getImportLights():
    '''
    Returns if import should contain lights.
    '''
    pass


def getImportMeshes():
    '''
    Returns if import should contain mesh geometry.
    '''
    pass


def getImportParts():
    '''
    Returns if import of part files is enabled.
    '''
    pass


def getImportSurfaces():
    '''
    Returns if import should contain NURB surfaces.
    '''
    pass


def getImportTemplateGeometries():
    '''
    Returns if import should contain template geometries.
    '''
    pass


def getMaxParallelImportTasks():
    '''
    Returns maximum parallelism of part file import when importing an assembly.
    '''
    pass


def getRobustTessellationEnabled():
    '''
    Returns if more robust tessellation algorithm is enabled.
    '''
    pass


def getVREDDataDir():
    '''
    Returns the VRED data path.
    '''
    pass


def getVREDDir():
    '''
    Returns the VRED installation path.
    '''
    pass


def getVREDExamplesDir():
    '''
    Returns the VRED examples path.
    '''
    pass


def getVServerScene():
    '''
    Returns the current vserver scene path.
    '''
    pass


def isLoading():
    '''
    Returns loading file state.
    '''
    pass


def load(newFile, filename, showImportOptions, filenames, parent):
    '''
    Function signatures: load(fileName), load(fileNames), load(fileNames, parent, newFile, showImportOptions)
    '''
    pass


def loadGeometry(filename):
    '''
    Loads a geometry file.
    '''
    pass


def loadOSB(filename):
    '''
    Loads a single or multiple osb files from disk.
    '''
    pass


def save(filename):
    '''
    Saves a geometry, script or project file.
    '''
    pass


def saveGeometry(filename, root):
    '''
    Saves a geometry file.
    '''
    pass


def saveGeometryNoSwapCubeMaps():
    '''
    Saves geometry without swapping the cube maps.
    '''
    pass


def saveSelectedGeometry(filename, includeEnvironmentGeometries):
    '''
    Saves selected geometry file.
    '''
    pass


def setApproximationEnabled():
    '''
    Documentation missing
    '''
    pass


def setConvertToUberMaterials(value):
    '''
    Deprecated.
    '''
    pass


def setDisableMultithreadedImport():
    '''
    Documentation missing
    '''
    pass


def setFileIOKey(key):
    '''
    Sets the current fileo key for crypted vpb files.
    '''
    pass


def setFileIOMergeEnvironmentOption(option):
    '''
    Sets the current vred project file merge behavior when adding a vpb file.
    '''
    pass


def setFileIOMergeMaterials(merge):
    '''
    Sets the current vred project file merge behavior when adding a vpb file.
    '''
    pass


def setFileIOMergeProjectAnimations(import_):
    '''
    Sets the value for importing animations when loading VRED files.
    '''
    pass


def setFileIOMergeProjectAnnotations(merge):
    '''
    Sets the current vred project file merge behavior when adding a vpb file.
    '''
    pass


def setFileIOMergeProjectClips(import_):
    '''
    Sets the value for importing animation clips when loading VRED files.
    '''
    pass


def setFileIOMergeProjectSequences(merge):
    '''
    Sets the current vred project file merge behavior when adding a vpb file.
    '''
    pass


def setFileIOMergeProjectTouchSensors(merge):
    '''
    Sets the current vred project file merge behavior when adding a vpb file.
    '''
    pass


def setFileIOMergeProjectVariants(merge):
    '''
    Sets the current vred project file merge behavior when adding a vpb file.
    '''
    pass


def setFileIOValidationKey(vkey):
    '''
    Sets the current fileo validation key for crypted vpb files.
    '''
    pass


def setFixSurfaceOrientation():
    '''
    Documentation missing
    '''
    pass


def setHealStitchEnabled():
    '''
    Documentation missing
    '''
    pass


def setImportApplyMaterialsFromAssetManager(apply):
    '''
    Sets the value for applying materials from asset manager when importing a file.
    '''
    pass


def setImportAssociativeMeshes():
    '''
    Documentation missing
    '''
    pass


def setImportBookmarks():
    '''
    Documentation missing
    '''
    pass


def setImportCameras():
    '''
    Documentation missing
    '''
    pass


def setImportCenterInOrigin(centerInOrigin):
    '''
    Sets the value for centering loaded geometry in origin.
    '''
    pass


def setImportCurves():
    '''
    Documentation missing
    '''
    pass


def setImportEmptyLayers():
    '''
    Documentation missing
    '''
    pass


def setImportInvisibleCurves():
    '''
    Documentation missing
    '''
    pass


def setImportInvisibleInstances(enable_invisible_instances):
    '''
    Switch import of invisible instances.
    '''
    pass


def setImportInvisibleMeshes():
    '''
    Documentation missing
    '''
    pass


def setImportInvisibleSurfaces():
    '''
    Documentation missing
    '''
    pass


def setImportLights():
    '''
    Documentation missing
    '''
    pass


def setImportMeshes():
    '''
    Documentation missing
    '''
    pass


def setImportParts(enable_parts):
    '''
    Switch import of part files refereced in assemblies.
    '''
    pass


def setImportPutOnGround(putOnGround):
    '''
    Sets the value for putting loaded geometry on the zero plane.
    '''
    pass


def setImportSurfaces():
    '''
    Documentation missing
    '''
    pass


def setImportTemplateGeometries():
    '''
    Documentation missing
    '''
    pass


def setMaxParallelImportTasks():
    '''
    Documentation missing
    '''
    pass


def setRobustTessellationEnabled():
    '''
    Documentation missing
    '''
    pass


def setTessellationOptions(stitching_tolerance, flush_transforms, chord_deviation, keep_nurbs, unshare_nodes, create_layer_groups, stitching, remove_groups, normal_tolerance, mergegeometries, max_chord_length):
    '''
    Sets the tessellation parameters to use when loading a file.
    '''
    pass


def setVServerScene(scene):
    '''
    Sets the current vserver scene path.
    '''
    pass


def unloadGeometry(filename, node):
    '''
    Unloads a geometry file.
    '''
    pass


def vrFileClearTmpDir():
    '''
    Deletes all files in the temporary directory.
    '''
    pass


def vrFileGetTmpDir():
    '''
    Returns a temporary filepath.
    '''
    pass


def vrFileRemoveTmpFile(filename):
    '''
    Deletes a file in the temporary directory.
    '''
    pass

